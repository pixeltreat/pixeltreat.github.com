{"version":3,"sources":["comtec.global.constants.js","comtec.startup.js","comtec.model.js","comtec.controler.names.js","comtec.event.names.js","comtec.route.names.js","comtec.message.types.js","comtec.styles.js","comtec.messages.js","comtec.config.constants.js","comtec.helpers.js","comtec.security.js","comtec.ajax.util.js","comtec.ds.common.js","comtec.ds.admin.agency.js","comtec.ds.admin.department.js","comtec.ds.admin.medicalconditiontier.js","comtec.ds.admin.sheltertype.js","comtec.ds.admin.staffspecialty.js","comtec.ds.admin.transporttype.js","comtec.ds.admin.medicalcondition.js","comtec.ds.admin.stafftype.js","comtec.ds.admin.sheltreeemployeeratio.js","comtec.ds.admin.disposition.js","comtec.ds.admin.shelterIdentification.js","comtec.ds.admin.equipmentSupply.js","comtec.ds.admin.event.js","comtec.ds.shlt.shelter.js","comtec.ds.emp.employee.js","comtec.ds.emp.empattendance.js","comtec.ds.sheltree.sheltree.js","comtec.ds.admin.question.js","comtec.ds.sheltree.sheltreeinput.js","comtec.ds.reports.js","comtec.ds.event.js","app-ui-scripts.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzxkngtlfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzttHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtttttvthXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5bjjntzrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app-libs.js","sourcesContent":["/// <reference path=\"C:\\Dev\\tfs\\ComTecCollection\\Test-TFVC\\Apps\\Dev\\Shelter\\Ver1.0\\Src\\Shelter.Web\\01 PL\\Shelter.Web\\src/modules/modules.js\" />\r\n\r\n//when adding a variable to this file make sure, there are no name collisions\r\n\r\n//global varibales in total application\r\n\r\n//Service layer deployed location (Without security)\r\n//var globalBaseServiceUrl = 'https://beta.comtecinfo.com/IMServiceDemo/';\r\n\r\n//Servicelayer on local machine.\r\n//var globalBaseServiceUrl = 'http://localhost:7222/';\r\n//var globalBaseServiceUrl = 'https://beta.comtecinfo.com/sheltersl/';\r\n//QA Service URL\r\n//var globalBaseServiceUrl = 'https://qa.comtecinfo.com:452/msns/msnsservice/';\r\n\r\n//var globalBaseServiceUrl = 'http://localhost:52848/';\r\nvar globalBaseServiceUrl = 'https://beta.comtecinfo.com/msnssldemo/';\r\n\r\n\r\nvar gloabalHospiceId = 640306;\r\n\r\nvar gloabalMiscellaneousSectionId = 2;\r\nvar gloabalVitalSignsSectionId = 4;\r\n\r\n\r\n\r\n//Roles\r\nvar globalSuperAdminId = 9;\r\nvar globalAdministratorId = 4;\r\nvar globalFacilityUpdateId = 3;\r\nvar globalFacilityReadOnlyId = 2;\r\n\r\n\r\n//Question types\r\n//we can get rid of this\r\nvar globalAnswerTypes = [\r\n{ \"Key\": 1, \"Value\": \"String Text Box\" },\r\n{ \"Key\": 2, \"Value\": \"Numeric Text Box\" },\r\n{ \"Key\": 3, \"Value\": \"Decimal Text Box\" },\r\n{ \"Key\": 4, \"Value\": \"Text Area\" },\r\n{ \"Key\": 5, \"Value\": \"Multiple Choice Only One Answer\" },\r\n{ \"Key\": 6, \"Value\": \"MultipleChoice Multiple Answer\" },\r\n{ \"Key\": 7, \"Value\": \"Dropdown List\" }\r\n];\r\n\r\nvar globalDefaultAnswerType = { \"Key\": 1, \"Value\": \"String Text Box\" };\r\n\r\n\r\nvar globalQtStringTextBoxId = 1;\r\nvar globalQtNumericTextBoxId = 2;\r\nvar globalQtDecimalTextBoxId = 3;\r\nvar globalQtTextAreaId = 4;\r\nvar globalQtMultipleChoiceOnlyOneAnswerId = 5;\r\nvar globalQtMultipleChoiceMultipleAnswerId = 6;\r\nvar globalQtDropdownListId = 7;\r\n\r\n\r\n","// Files Order\n//1.  comtec.startup.js file\n//2. constants and utility functions, these files are independent, does not depend on any other files except comtec.startup.js.\n//3. helpers\n//4. errors\n//5. ajax util\n//6. data source files, currently each data source file is independent and does not depend on any other data source files.\n\n\n/// <reference path=\"comtec.startup.js\" />\n\n\n// constants and util functions\n\n/// <reference path=\"common/comtec.model.js\" />\n/// <reference path=\"common/comtec.controler.names.js\" />\n/// <reference path=\"common/comtec.event.names.js\" />\n/// <reference path=\"common/comtec.route.names.js\" />\n/// <reference path=\"common/comtec.message.types.js\" />\n/// <reference path=\"common/comtec.styles.js\" />\n/// <reference path=\"common/comtec.messages.js\" />\n\n\n/// <reference path=\"comtec.helpers.js\" />\n/// <reference path=\"comtec.error.js\" />\n/// <reference path=\"comtec.ajax.util.js\" />\n\n\n// Data sorce files\n/// <reference path=\"datasources/comtec.ds.admin.status.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.bedtype.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.hssbedtype.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.genservice.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.outcome.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.reasons.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.promptins.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.scripts.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.medicalequip.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.evacdestination.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.utilityprovider.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.enum.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.transportation.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.disposition.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.transporttype.js\" />\n/// <reference path=\"datasources/comtec.ds.admin.evacueetype.js\" />\n\n\n/// <reference path=\"datasources/comtec.ds.su.facilitycensus.js\" />\n/// <reference path=\"datasources/comtec.ds.su.generatorfacility.js\" />\n/// <reference path=\"datasources/comtec.ds.su.facilitycensus.js\" />\n\n\n\nvar $ct = $ct || {};\n$ct.ds = $ct.ds || {};\n$ct.ds.admin = $ct.ds.admin || {};\n$ct.ds.shlt = $ct.ds.shlt || {};\n$ct.ds.emp = $ct.ds.emp || {};\n$ct.ds.sheltree = $ct.ds.sheltree || {};\n\n","\r\n$ct.constants = function () {\r\n\r\n\r\n    var emptyGUID = \"00000000-0000-0000-0000-000000000000\";\r\n\r\n    var getemptyGUID = function () {\r\n        return emptyGUID;\r\n    };\r\n\r\n    var newRecordId = \"-1\";\r\n\r\n    var getNewRecordId = function () {\r\n        return newRecordId;\r\n    };\r\n\r\n    var getHttpVerb = \"GET\";\r\n\r\n    var getGetHttpVerb = function () {\r\n        return getHttpVerb;\r\n    };\r\n\r\n    var postHttpVerb = \"POST\";\r\n\r\n    var getPostHttpVerb = function () {\r\n        return postHttpVerb;\r\n    };\r\n\r\n    var dataType = 'json';\r\n    var getDataType = function () {\r\n        return dataType;\r\n    };\r\n\r\n    var contentType = 'application/json; charset=utf-8';\r\n\r\n    var getContentType = function () {\r\n        return contentType;\r\n    };\r\n\r\n    var Key = 'Comtec@12#';\r\n    var getKey = function () {\r\n        return Key;\r\n    };\r\n\r\n    var ClientTag = 'ShelterWeb';\r\n    var getClientTag = function () {\r\n        return ClientTag;\r\n    };\r\n\r\n    var SessionToken = [];\r\n    var getSessionToken = function () {\r\n        return SessionToken;\r\n    };\r\n\r\n    var ServiceRequest = {\r\n        ClientTag: ClientTag,\r\n        AccessToken: 'access',\r\n        InfSystem: 'Comtec',\r\n        RequestId: '',\r\n        SessionToken: [],\r\n        Data: null\r\n    };\r\n\r\n    var getServiceRequest = function () {\r\n        return ServiceRequest;\r\n    };\r\n\r\n\r\n\r\n    // Exposed objects and parameters\r\n    return {\r\n        getemptyGUID: getemptyGUID,\r\n\r\n        //AJAX Related\r\n        getGetHttpVerb: getGetHttpVerb,\r\n        getPostHttpVerb: getPostHttpVerb,\r\n        getDataType: getDataType,\r\n        getContentType: getContentType,\r\n\r\n        //Authentical relates  \r\n        getKey: getKey,\r\n        getClientTag: getClientTag,\r\n        getSessionToken: getSessionToken,\r\n        SessionToken: SessionToken,\r\n        getServiceRequest: getServiceRequest,\r\n        getNewRecordId: getNewRecordId\r\n\r\n    };\r\n} ();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//Controler Names\r\n$ct.cn = function () {\r\n\r\n    var baseServiceUrl = globalBaseServiceUrl + \"api/\";\r\n\r\n    \r\n    //Start of admin controllers\r\n\r\n    var agencyUrl = baseServiceUrl + \"Agency/\"\r\n    var getAgencyUrl = function () {\r\n        return agencyUrl;\r\n    };\r\n\r\n    var medicalConditionTierUrl = baseServiceUrl + \"MedicalConditionTier/\"\r\n    var getMedicalConditionTierUrl = function () {\r\n        return medicalConditionTierUrl;\r\n    };\r\n\r\n    var shelterTypeUrl = baseServiceUrl + \"ShelterType/\"\r\n    var getShelterTypeUrl = function () {\r\n        return shelterTypeUrl;\r\n    };\r\n\r\n    var staffSpecialtyUrl = baseServiceUrl + \"StaffSpeciality/\"\r\n    var getStaffSpecialtyUrl = function () {\r\n        return staffSpecialtyUrl;\r\n    };\r\n    //end of admin controllers\r\n\r\n\r\n    // start of common controllers\r\n\r\n    var commonServicesUrl = baseServiceUrl + \"KeyValue/\"\r\n    var getcommonServicesUrl = function () {\r\n        return commonServicesUrl;\r\n    };\r\n    var departmentServiceUrl = baseServiceUrl + \"Department/\"\r\n    var getDepartmentServiceUrl = function () {\r\n        return departmentServiceUrl;\r\n    };\r\n    var staffTypeServiceUrl = baseServiceUrl + \"StaffType/\"\r\n    var getStaffTypeServiceUrl = function () {\r\n        return staffTypeServiceUrl;\r\n    };\r\n    var medicalConditionServiceUrl = baseServiceUrl + \"MedicalCondition/\"\r\n    var getmedicalConditionServiceUrl = function () {\r\n        return medicalConditionServiceUrl;\r\n    };\r\n    var transportationTypeServiceUrl = baseServiceUrl + \"Transportationtype/\"\r\n    var getTransportationTypeServiceUrl = function () {\r\n        return transportationTypeServiceUrl;\r\n    };\r\n    var sheltreeEmployeeRatioUrl = baseServiceUrl + \"SheltreeEmployeeRatio/\"\r\n    var getSheltreeEmployeeRatioUrl = function () {\r\n        return sheltreeEmployeeRatioUrl;\r\n    };\r\n\r\n\r\n    var equipmentSupplyUrl = baseServiceUrl + \"EquipmentSupply/\"\r\n    var getEquipmentSupplyUrl = function () {\r\n        return equipmentSupplyUrl;\r\n    };\r\n\r\n    var shelterIdentificationUrl = baseServiceUrl + \"ShelterIdentification/\"\r\n    var getShelterIdentificationUrl = function () {\r\n        return shelterIdentificationUrl;\r\n    };\r\n\r\n    // Start of other controllers\r\n\r\n\r\n    var employeeUrl = baseServiceUrl + \"Employee/\"\r\n    var getEmployeeUrl = function () {\r\n        return employeeUrl;\r\n    };\r\n\r\n    var shelterUrl = baseServiceUrl + \"Shelter/\"\r\n    var getShelterUrl = function () {\r\n        return shelterUrl;\r\n    };\r\n\r\n    var employeeAttendanceUrl = baseServiceUrl + \"EmployeeAttendance/\"\r\n    var getEmployeeAttendanceUrl = function () {\r\n        return employeeAttendanceUrl;\r\n    };\r\n\r\n\r\n   \r\n    var DispositionUrl = baseServiceUrl + \"Disposition/\"\r\n    var getDispositionUrl = function () {\r\n        return DispositionUrl;\r\n    };\r\n    // start of shelterstaus controller\r\n    var shelterStatusUrl = baseServiceUrl + \"ShelterStatus/\"\r\n    var getShelterStatusUrl = function () {\r\n        return shelterStatusUrl;\r\n    };\r\n    //end of shelterstaus controller\r\n\r\n\r\n    // start of event controller\r\n    var eventUrl = baseServiceUrl + \"Event/\"\r\n    var getEventUrl = function () {\r\n        return eventUrl;\r\n    };\r\n    //end of event controller\r\n\r\n\r\n    // start of shelterstaus controller\r\n   \r\n    //end of shelterstaus controller\r\n    var sheltereeFacilityUrl = baseServiceUrl + \"SheltereeFacility/\"\r\n    var getSheltereeFacilityUrl = function () {\r\n        return sheltereeFacilityUrl;\r\n    };\r\n\r\n    // start of question controller\r\n\r\n    var questionUrl = baseServiceUrl + \"Question/\"\r\n    var getQuestionUrl = function () {\r\n        return questionUrl;\r\n    };\r\n\r\n    var questionResponseUrl = baseServiceUrl + \"QuestionResponse/\"\r\n    var getQuestionResponseUrl = function () {\r\n        return questionResponseUrl;\r\n    };\r\n\r\n    // end  of question controller\r\n\r\n    // start of reports controller\r\n    var reportsUrl = baseServiceUrl + \"Reports/\"\r\n    var getReportsUrl = function () {\r\n        return reportsUrl;\r\n    };\r\n    // end  of reports controller\r\n    \r\n\r\n    return {\r\n        //Start of admin controllers\r\n        getAgencyUrl: getAgencyUrl,\r\n        getMedicalConditionTierUrl: getMedicalConditionTierUrl,\r\n        getShelterTypeUrl: getShelterTypeUrl,\r\n        getStaffSpecialtyUrl: getStaffSpecialtyUrl,\r\n        getDispositionUrl:getDispositionUrl,\r\n        //end of admin controllers\r\n\r\n        // start of common controllers\r\n        getcommonServicesUrl: getcommonServicesUrl,\r\n        getDepartmentServiceUrl: getDepartmentServiceUrl,\r\n        getStaffTypeServiceUrl: getStaffTypeServiceUrl,\r\n        getmedicalConditionServiceUrl: getmedicalConditionServiceUrl,\r\n        getTransportationTypeServiceUrl: getTransportationTypeServiceUrl,\r\n        getSheltreeEmployeeRatioUrl: getSheltreeEmployeeRatioUrl,\r\n        getEquipmentSupplyUrl: getEquipmentSupplyUrl,\r\n        getShelterIdentificationUrl:getShelterIdentificationUrl,\r\n        // end of common controllers\r\n\r\n        // Start of other controllers\r\n        getShelterUrl : getShelterUrl,\r\n        getEmployeeUrl: getEmployeeUrl,\r\n\r\n        // start of shelterstaus controller\r\n        getShelterStatusUrl: getShelterStatusUrl,\r\n        //end of shelterstaus controller\r\n\r\n        // start of event controller\r\n        getEventUrl: getEventUrl,\r\n        //end of event controller\r\n    \r\n        getEmployeeAttendanceUrl: getEmployeeAttendanceUrl,   \r\n        getSheltereeFacilityUrl: getSheltereeFacilityUrl,\r\n        getQuestionUrl: getQuestionUrl,\r\n        getQuestionResponseUrl: getQuestionResponseUrl,\r\n\r\n\r\n        // start of reports controller\r\n        getReportsUrl: getReportsUrl\r\n        //end of reports controller\r\n\r\n       \r\n\r\n\r\n    };\r\n} ();\r\n\r\n","//Event Names\r\n$ct.en = function () {\r\n\r\n    //start of application independant common events\r\n\r\n    var updateSecuritySettings = \"UPDATE_SECURITY_SETTINGS\";\r\n    var getUpdateSecuritySettings = function () {\r\n        return updateSecuritySettings;\r\n    };\r\n\r\n    var doNotHavePermission = \"DO_NOT_HAVE_PERMISSION\";\r\n    var getDoNotHavePermission = function () {\r\n        return doNotHavePermission;\r\n    };\r\n\r\n    var goToNoPermissionPage = \"GO_TO_NO_PERMISSION_PAGE\";\r\n    var getGoToNoPermissionPage = function () {\r\n        return goToNoPermissionPage;\r\n    };\r\n\r\n    var goToNoRolePage = \"GO_TO_NO_ROLE_PAGE\";\r\n    var getGoToNoRolePage = function () {\r\n        return goToNoRolePage;\r\n    };\r\n\r\n    var showValidationMsg = \"SHOW_VALIDATION_MESSAGE\";\r\n\r\n    var getShowValidationMsg = function () {\r\n        return showValidationMsg;\r\n    };\r\n\r\n    var showSuccMsg = \"SHOW_SUCCESS_MESSAGE\";\r\n\r\n    var getShowSuccMsg = function () {\r\n        return showSuccMsg;\r\n    };\r\n\r\n    var showErrorMsg = \"SHOW_ERROR_MESSAGE\";\r\n\r\n    var getShowErrorMsg = function () {\r\n        return showErrorMsg;\r\n    };\r\n\r\n    var showErrorMsgJS = \"SHOW_ERROR_MESSAGE_JS\";\r\n\r\n    var getShowErrorMsgJS = function () {\r\n        return showErrorMsgJS;\r\n    };\r\n\r\n    var hideErrorMsg = \"HIDE_ERROR_MESSAGE\";\r\n\r\n    var getHideErrorMsg = function () {\r\n        return hideErrorMsg;\r\n    };\r\n\r\n\r\n    var refreshView = \"REFRESH_VIEW\";\r\n\r\n    var getRefreshView = function () {\r\n        return refreshView;\r\n    };\r\n\r\n\r\n    var goToHome = \"GO_TO_HOME\";\r\n\r\n    var getGoToHome = function () {\r\n        return goToHome;\r\n    };\r\n\r\n\r\n    //end of application independant common events\r\n\r\n\r\n\r\n    \r\n\r\n    //start of admin events  \r\n\r\n    var displayAgencyList = \"DISPLAY_AGENCY_LIST\";\r\n\r\n    var getDisplayAgencyList = function () {\r\n        return displayAgencyList;\r\n    };\r\n\r\n\r\n    var agencyCreatedOrUpdated = \"AGENCY_CREATED_OR_UPDATED\";\r\n\r\n    var getAgencyCreatedOrUpdated = function () {\r\n        return agencyCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayDepartmentList = \"DISPLAY_DEPARTMENT_LIST\";\r\n\r\n    var getDisplayDepartmentList = function () {\r\n        return displayDepartmentList;\r\n    };\r\n\r\n\r\n    var departmentCreatedOrUpdated = \"DEPARTMENT_CREATED_OR_UPDATED\";\r\n\r\n    var getDepartmentCreatedOrUpdated = function () {\r\n        return departmentCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayMedicalConditionList = \"DISPLAY_MEDICALCONDITION_LIST\";\r\n\r\n    var getDisplayMedicalConditionList = function () {\r\n        return displayMedicalConditionList;\r\n    };\r\n\r\n\r\n    var medicalConditionCreatedOrUpdated = \"MEDICALCONDITION_CREATED_OR_UPDATED\";\r\n\r\n    var getMedicalConditionCreatedOrUpdated = function () {\r\n        return medicalConditionCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayMedicalConditionTierList = \"DISPLAY_MEDICALCONDITIONTIER_LIST\";\r\n\r\n    var getDisplayMedicalConditionTierList = function () {\r\n        return displayMedicalConditionTierList;\r\n    };\r\n\r\n\r\n    var medicalConditionTierCreatedOrUpdated = \"MEDICALCONDITIONTIER_CREATED_OR_UPDATED\";\r\n\r\n    var getMedicalConditionTierCreatedOrUpdated = function () {\r\n        return medicalConditionTierCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayShelterTypeList = \"DISPLAY_SHELTERTYPE_LIST\";\r\n\r\n    var getDisplayShelterTypeList = function () {\r\n        return displayShelterTypeList;\r\n    };\r\n\r\n\r\n    var shelterTypeCreatedOrUpdated = \"SHELTERTYPE_CREATED_OR_UPDATED\";\r\n\r\n    var getShelterTypeCreatedOrUpdated = function () {\r\n        return shelterTypeCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displaySheltreeEmployeeRatioList = \"DISPLAY_SHELTREEEMPLOYEERATIO_LIST\";\r\n\r\n    var getDisplaySheltreeEmployeeRatioList = function () {\r\n        return displaySheltreeEmployeeRatioList;\r\n    };\r\n\r\n\r\n    var sheltreeEmployeeRatioCreatedOrUpdated = \"SHELTREEEMPLOYEERATIO_CREATED_OR_UPDATED\";\r\n\r\n    var getSheltreeEmployeeRatioCreatedOrUpdated = function () {\r\n        return sheltreeEmployeeRatioCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayStaffSpecialtyList = \"DISPLAY_STAFFSPECIALTY_LIST\";\r\n\r\n    var getDisplayStaffSpecialtyList = function () {\r\n        return displayStaffSpecialtyList;\r\n    };\r\n\r\n\r\n    var staffSpecialtyCreatedOrUpdated = \"STAFFSPECIALTY_CREATED_OR_UPDATED\";\r\n\r\n    var getStaffSpecialtyCreatedOrUpdated = function () {\r\n        return staffSpecialtyCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayStaffTypeList = \"DISPLAY_STAFFTYPE_LIST\";\r\n\r\n    var getDisplayStaffTypeList = function () {\r\n        return displayStaffTypeList;\r\n    };\r\n\r\n\r\n    var staffTypeCreatedOrUpdated = \"STAFFTYPE_CREATED_OR_UPDATED\";\r\n\r\n    var getStaffTypeCreatedOrUpdated = function () {\r\n        return staffTypeCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayTransportTypeList = \"DISPLAY_TRANSPORTATIONTYPE_LIST\";\r\n\r\n    var getDisplayTransportTypeList = function () {\r\n        return displayTransportTypeList;\r\n    };\r\n\r\n\r\n    var transportTypeCreatedOrUpdated = \"TRANSPORTATIONTYPE_CREATED_OR_UPDATED\";\r\n\r\n    var getTransportTypeCreatedOrUpdated = function () {\r\n        return transportTypeCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayDispositionList = \"DISPLAY_DISPOSITION_LIST\";\r\n\r\n    var getDisplayDispositionList = function () {\r\n        return displayDispositionList;\r\n    };\r\n\r\n\r\n    var dispositionCreatedOrUpdated = \"DISPOSITION_CREATED_OR_UPDATED\";\r\n\r\n    var getDispositionCreatedOrUpdated = function () {\r\n        return dispositionCreatedOrUpdated;\r\n    };\r\n\r\n    var displayEquipmentSupplyList = \"DISPLAY_EquipmentSupply_LIST\";\r\n\r\n    var getDisplayEquipmentSupplyList = function () {\r\n        return displayEquipmentSupplyList;\r\n    };\r\n\r\n    var equipmentSupplyCreatedOrUpdated = \"EQUIPMENTSUPPLY_CREATED_OR_UPDATED\";\r\n\r\n    var getEquipmentSupplyCreatedOrUpdated = function () {\r\n        return equipmentSupplyCreatedOrUpdated;\r\n    };\r\n\r\n    var displayShelterIdentificationList = \"DISPLAY_SHELTERIDENTIFICATION_LIST\";\r\n\r\n    var getDisplayShelterIdentificationList = function () {\r\n        return displayShelterIdentificationList;\r\n    };\r\n    \r\n\r\n    var ShelterIdentificationCreatedOrUpdated = \"SHELTERIDENTIFICATION_CREATED_OR_UPDATED\";\r\n\r\n    var getShelterIdentificationCreatedOrUpdated = function () {\r\n        return ShelterIdentificationCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var displayquestionList = \"DISPLAY_QUESTION_LIST\";\r\n\r\n    var getDisplayquestionList = function () {\r\n        return displayquestionList;\r\n    };\r\n\r\n\r\n    var questionCreatedOrUpdated = \"QUESTION_CREATED_OR_UPDATED\";\r\n\r\n    var getQuestionCreatedOrUpdated = function () {\r\n        return questionCreatedOrUpdated;\r\n    };\r\n\r\n    var displayEventList = \"DISPLAY_EVENT_LIST\";\r\n\r\n    var getDisplayEventList = function () {\r\n        return displayEventList;\r\n    };\r\n\r\n\r\n    var eventCreatedOrUpdated = \"EVENT_CREATED_OR_UPDATED\";\r\n\r\n    var getEventCreatedOrUpdated = function () {\r\n        return eventCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    //end of admin events\r\n\r\n    //start of employee events  \r\n\r\n\r\n    //Use this event when user clicks on employee menu item second time onwords\r\n    var employeeMenuItemClicked = \"EMPLOYEE_MENU_ITEM_CLICKED\";\r\n\r\n    var getEmployeeMenuItemClicked = function () {\r\n        return employeeMenuItemClicked;\r\n    };\r\n\r\n    //to refresh current employee page with newly selected data in employee header(Shelter type and Shelter)\r\n    var employeeHeaderDataChanged = \"EMPLOYEE_HEADER_DATA_CHANGED\";\r\n\r\n    var getEmployeeHeaderDataChanged = function () {\r\n        return employeeHeaderDataChanged;\r\n    };\r\n\r\n    //to load shelter type, shelter drop down lists, when user click on employee menu item first time\r\n    var loadEmployeeHeaderInfo = \"LOAD_EMPLOYEE_HEADER_INFO\";\r\n\r\n    var getLoadEmployeeHeaderInfo = function () {\r\n        return loadEmployeeHeaderInfo;\r\n    };\r\n\r\n\r\n    //to show shelter dropdown lists in employee shelter header\r\n    var showEmployeeShelterHeader = \"SHOW_EMPLOYEE_SHELTER_HEADER\";\r\n\r\n    var getShowEmployeeShelterHeader = function () {\r\n        return showEmployeeShelterHeader;\r\n    };\r\n\r\n    //to hide shelter dropdown lists in employee shelter header\r\n    var hideEmployeeShelterHeader = \"HIDE_EMPLOYEE_SHELTER_HEADER\";\r\n\r\n    var getHideEmployeeShelterHeader = function () {\r\n        return hideEmployeeShelterHeader;\r\n    };\r\n\r\n\r\n    var hideEmployeeHeader = \"HIDE_EMPLOYEE_HEADER\";\r\n\r\n    var getHideEmployeeHeader = function () {\r\n        return hideEmployeeHeader;\r\n    };\r\n\r\n    var hideEmployeeHeaderNav = \"HIDE_EMPLOYEE_HEADER_NAV\";\r\n\r\n    var getHideEmployeeHeaderNavigation = function () {\r\n        return hideEmployeeHeaderNav;\r\n    };\r\n\r\n\r\n    var showActiveEmployeeHeader = \"SHOW_ACTIVE_EMPLOYEE_HEADER\";\r\n\r\n    var getShowActiveEmployeeHeader = function () {\r\n        return showActiveEmployeeHeader;\r\n    };\r\n\r\n    var employeeCreatedOrUpdated = \"EMPLOYEE_CREATED_OR_UPDATED\";\r\n\r\n    var getEmployeeCreatedOrUpdated = function () {\r\n        return employeeCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var employeeRecordReload = \"RELOAD_EMPLOYEE_RECORD\";\r\n\r\n    var getEmployeeRecordReload = function () {\r\n        return employeeRecordReload;\r\n    };\r\n\r\n    var manageEmployeeClicked = \"MANAGE_EMPLOYEE_CLICKED\";\r\n    var getManageEmployeeClicked = function () {\r\n        return manageEmployeeClicked;\r\n    };\r\n\r\n\r\n    var manageEmployeeExpandedClicked = \"MANAGE_EMPLOYEE_EXPANDED_CLICKED\";\r\n    var getManageEmployeeExpandedClicked = function () {\r\n        return manageEmployeeExpandedClicked;\r\n    };\r\n\r\n    var employeeExpandedCreatedOrUpdated = \"EMPLOYEE_EXPANDED_CREATED_OR_UPDATED\";\r\n\r\n    var getEmployeeExpandedCreatedOrUpdated = function () {\r\n        return employeeExpandedCreatedOrUpdated;\r\n    };\r\n\r\n    //end of employee events\r\n \r\n    //Start  of employee attendence events\r\n\r\n    var employeeAttendenceComments = \"COMMENT_UPDATE\";\r\n\r\n    var getEmployeeAttendenceComments = function () {\r\n        return employeeAttendenceComments;\r\n    };\r\n\r\n    var employeeAttendenceList = \"DISPLAY_EMPLOYEEATTENDENCE_LIST\";\r\n\r\n    var getEmployeeAttendenceList = function () {\r\n        return employeeAttendenceList;\r\n    };\r\n\r\n    var employeeAttendanceUpdated = \"EMPLOYEEATTENDENCE_CREATED_OR_UPDATED\";\r\n    var getEmployeeAttendanceUpdated = function () {\r\n        return employeeAttendanceUpdated;\r\n    };\r\n\r\n\r\n\r\n    //End  of employee attendence events\r\n\r\n    //start of shelteree events  \r\n\r\n    //Use this event when user clicks on shelteree menu item second time onwords\r\n    var sheltereeMenuItemClicked = \"SHELTEREE_MENU_ITEM_CLICKED\";\r\n\r\n    var getSheltereeMenuItemClicked = function () {\r\n        return sheltereeMenuItemClicked;\r\n    };\r\n\r\n    //to refresh current shelteree page with newly selected data in shelteree header(Shelter type and Shelter)\r\n    var sheltereeHeaderDataChanged = \"SHELTEREE_HEADER_DATA_CHANGED\";\r\n\r\n    var getSheltereeHeaderDataChanged = function () {\r\n        return sheltereeHeaderDataChanged;\r\n    };\r\n\r\n    //to load shelter type, shelter drop down lists, when user click on shelteree menu item first time\r\n    var loadSheltereeHeaderInfo = \"LOAD_SHELTEREE_HEADER_INFO\";\r\n\r\n    var getLoadSheltereeHeaderInfo = function () {\r\n        return loadSheltereeHeaderInfo;\r\n    };\r\n\r\n\r\n    //to show shelter dropdown lists in shelteree shelter header\r\n    var showSheltereeShelterHeader = \"SHOW_SHELTEREE_SHELTER_HEADER\";\r\n\r\n    var getShowSheltereeShelterHeader = function () {\r\n        return showSheltereeShelterHeader;\r\n    };\r\n\r\n    //to hide shelter dropdown lists in shelteree shelter header\r\n    var hideSheltereeShelterHeader = \"HIDE_SHELTEREE_SHELTER_HEADER\";\r\n\r\n    var getHideSheltereeShelterHeader = function () {\r\n        return hideSheltereeShelterHeader;\r\n    };\r\n\r\n\r\n    var hideSheltereeHeader = \"HIDE_SHELTEREE_HEADER\";\r\n\r\n    var getHideSheltereeHeader = function () {\r\n        return hideSheltereeHeader;\r\n    };\r\n\r\n    var hideSheltereeHeaderNav = \"HIDE_SHELTEREE_HEADER_NAV\";\r\n\r\n    var getHideSheltereeHeaderNavigation = function () {\r\n        return hideSheltereeHeaderNav;\r\n    };\r\n\r\n\r\n    var showActiveSheltereeHeader = \"SHOW_ACTIVE_SHELTEREE_HEADER\";\r\n\r\n    var getShowActiveSheltereeHeader = function () {\r\n        return showActiveSheltereeHeader;\r\n    };\r\n\r\n    var sheltereeCreatedOrUpdated = \"SHELTEREE_CREATED_OR_UPDATED\";\r\n\r\n    var getSheltereeCreatedOrUpdated = function () {\r\n        return sheltereeCreatedOrUpdated;\r\n    };\r\n\r\n    var sheltereeDischargeCreatedOrUpdated = \"SHELTEREE_DISCHARGE_CREATED_OR_UPDATED\";\r\n\r\n    var getSheltereeDischargeCreatedOrUpdated = function () {\r\n      return sheltereeDischargeCreatedOrUpdated;\r\n    };\r\n\r\n\r\n    var sheltereeMedicalUpdateCreatedOrUpdated = \"SHELTEREE_MEDICAL_UPDATE_CREATED_OR_UPDATED\";\r\n\r\n    var getSheltereeMedicalUpdateCreatedOrUpdated = function () {\r\n        return sheltereeMedicalUpdateCreatedOrUpdated;\r\n    };\r\n\r\n\r\n\r\n    var sheltereeRecordReload = \"RELOAD_SHELTEREE_RECORD\";\r\n\r\n    var getSheltereeRecordReload = function () {\r\n        return sheltereeRecordReload;\r\n    };\r\n\r\n    var manageSheltereeClicked = \"MANAGE_SHELTEREE_CLICKED\";\r\n\r\n    var getManageSheltereeClicked = function () {\r\n        return manageSheltereeClicked;\r\n    };\r\n\r\n    var manageSheltereeDischargeClicked = \"MANAGE_SHELTEREE_DISCHARGE_CLICKED\";\r\n\r\n    var getManageSheltereeDischargeClicked = function () {\r\n        return manageSheltereeDischargeClicked;\r\n    };\r\n\r\n\r\n    var manageSheltereeMedicalUpdateClicked = \"MANAGE_SHELTEREE_MEDICAL_UPDATE_CLICKED\";\r\n\r\n    var getManageSheltereeMedicalUpdateClicked = function () {\r\n        return manageSheltereeMedicalUpdateClicked;\r\n    };\r\n\r\n    //end of shelteree events\r\n\r\n    return {\r\n\r\n        //start of application independant common events\r\n\r\n        getUpdateSecuritySettings: getUpdateSecuritySettings,\r\n        getDoNotHavePermission: getDoNotHavePermission,\r\n        getGoToNoRolePage: getGoToNoRolePage,\r\n        getGoToNoPermissionPage : getGoToNoPermissionPage,\r\n        getShowValidationMsg: getShowValidationMsg,\r\n        getShowSuccMsg: getShowSuccMsg,\r\n        getShowErrorMsg: getShowErrorMsg,\r\n        getShowErrorMsgJS: getShowErrorMsgJS,\r\n        getHideErrorMsg: getHideErrorMsg,\r\n        getRefreshView: getRefreshView,\r\n        getGoToHome: getGoToHome,\r\n\r\n        //end of application independant common events\r\n\r\n\r\n        //start of admin events    \r\n        \r\n        getDisplayAgencyList: getDisplayAgencyList,\r\n        getAgencyCreatedOrUpdated: getAgencyCreatedOrUpdated,\r\n        getDisplayDepartmentList: getDisplayDepartmentList,\r\n        getDepartmentCreatedOrUpdated: getDepartmentCreatedOrUpdated,\r\n        getDisplayMedicalConditionList: getDisplayMedicalConditionList,\r\n        getMedicalConditionCreatedOrUpdated: getMedicalConditionCreatedOrUpdated,\r\n        getDisplayMedicalConditionTierList: getDisplayMedicalConditionTierList,\r\n        getMedicalConditionTierCreatedOrUpdated: getMedicalConditionTierCreatedOrUpdated,\r\n        getDisplayShelterTypeList: getDisplayShelterTypeList,\r\n        getShelterTypeCreatedOrUpdated: getShelterTypeCreatedOrUpdated,\r\n        getDisplaySheltreeEmployeeRatioList: getDisplaySheltreeEmployeeRatioList,\r\n        getSheltreeEmployeeRatioCreatedOrUpdated: getSheltreeEmployeeRatioCreatedOrUpdated,\r\n        getDisplayStaffSpecialtyList: getDisplayStaffSpecialtyList,\r\n        getStaffSpecialtyCreatedOrUpdated: getStaffSpecialtyCreatedOrUpdated,\r\n        getDisplayStaffTypeList: getDisplayStaffTypeList,\r\n        getStaffTypeCreatedOrUpdated: getStaffTypeCreatedOrUpdated,\r\n        getDisplayTransportTypeList: getDisplayTransportTypeList,\r\n        getTransportTypeCreatedOrUpdated: getTransportTypeCreatedOrUpdated,\r\n        getDisplayDispositionList: getDisplayDispositionList,\r\n        getDispositionCreatedOrUpdated: getDispositionCreatedOrUpdated,\r\n        getDisplayEquipmentSupplyList: getDisplayEquipmentSupplyList,\r\n        getEquipmentSupplyCreatedOrUpdated: getEquipmentSupplyCreatedOrUpdated,\r\n        getDisplayShelterIdentificationList:getDisplayShelterIdentificationList,\r\n        getShelterIdentificationCreatedOrUpdated:getShelterIdentificationCreatedOrUpdated,\r\n        getDisplayquestionList: getDisplayquestionList,\r\n        getQuestionCreatedOrUpdated:getQuestionCreatedOrUpdated,\r\n        getDisplayEventList: getDisplayEventList,\r\n        getEventCreatedOrUpdated: getEventCreatedOrUpdated,\r\n        //end of admin events  \r\n\r\n\r\n        //start of employee events    \r\n        \r\n        getEmployeeMenuItemClicked : getEmployeeMenuItemClicked,\r\n        getEmployeeHeaderDataChanged : getEmployeeHeaderDataChanged,\r\n        getLoadEmployeeHeaderInfo : getLoadEmployeeHeaderInfo,\r\n        getShowEmployeeShelterHeader : getShowEmployeeShelterHeader,\r\n        getHideEmployeeShelterHeader : getHideEmployeeShelterHeader,\r\n        getHideEmployeeHeader : getHideEmployeeHeader,\r\n        getHideEmployeeHeaderNavigation : getHideEmployeeHeaderNavigation,\r\n        getShowActiveEmployeeHeader : getShowActiveEmployeeHeader,\r\n        getManageEmployeeClicked: getManageEmployeeClicked,\r\n        getManageEmployeeExpandedClicked: getManageEmployeeExpandedClicked,\r\n        getEmployeeCreatedOrUpdated: getEmployeeCreatedOrUpdated,\r\n        getEmployeeRecordReload:getEmployeeRecordReload,\r\n        getEmployeeExpandedCreatedOrUpdated: getEmployeeExpandedCreatedOrUpdated,\r\n\r\n        //end of employee events \r\n\r\n\r\n        //start of employee  attendence events    \r\n        getEmployeeAttendenceComments: getEmployeeAttendenceComments,\r\n        getEmployeeAttendanceUpdated: getEmployeeAttendanceUpdated,\r\n        getEmployeeAttendenceList: getEmployeeAttendenceList,\r\n\r\n\r\n        //end of employee  attendenceevents \r\n\r\n        //start of shelteree events  \r\n\r\n        getSheltereeMenuItemClicked: getSheltereeMenuItemClicked,\r\n        getSheltereeHeaderDataChanged: getSheltereeHeaderDataChanged,\r\n        getLoadSheltereeHeaderInfo: getLoadSheltereeHeaderInfo,\r\n        getShowSheltereeShelterHeader: getShowSheltereeShelterHeader,\r\n        getHideSheltereeShelterHeader: getHideSheltereeShelterHeader,\r\n        getHideSheltereeHeader: getHideSheltereeHeader,\r\n        getHideSheltereeHeaderNavigation: getHideSheltereeHeaderNavigation,\r\n        getShowActiveSheltereeHeader: getShowActiveSheltereeHeader,\r\n        getSheltereeCreatedOrUpdated: getSheltereeCreatedOrUpdated,\r\n        getSheltereeDischargeCreatedOrUpdated: getSheltereeDischargeCreatedOrUpdated,\r\n        getSheltereeMedicalUpdateCreatedOrUpdated:getSheltereeMedicalUpdateCreatedOrUpdated,\r\n        getSheltereeRecordReload: getSheltereeRecordReload,\r\n        getManageSheltereeClicked: getManageSheltereeClicked,\r\n        getManageSheltereeDischargeClicked: getManageSheltereeDischargeClicked,\r\n        getManageSheltereeMedicalUpdateClicked: getManageSheltereeMedicalUpdateClicked\r\n\r\n        //end of shelteree events\r\n    };\r\n} ();","\r\n//Route names\r\n// When ever route name in the module is changed change corresponding name here also.\r\n//When new route is added in module, add new route here also.\r\n$ct.rn = function () {\r\n\r\n    /*start of other routes */\r\n\r\n    var noPermission = \"nopermission\";\r\n\r\n    var getNoPermission = function () {\r\n        return noPermission;\r\n    };\r\n\r\n    var noRole = \"norole\";\r\n\r\n    var getNoRole = function () {\r\n        return noRole;\r\n    };\r\n\r\n    var noActiveEvent = \"noactiveevent\";\r\n\r\n    var getNoActiveEvent = function () {\r\n        return noActiveEvent;\r\n    };\r\n\r\n    /*end of other routes */\r\n\r\n\r\n    \r\n    //start of admin routes\r\n\r\n    var agencyList = \"agencylist\";\r\n\r\n    var getAgencyList = function () {\r\n        return agencyList;\r\n    };\r\n\r\n\r\n    var agency = \"agency\";\r\n\r\n    var getAgency = function () {\r\n        return agency;\r\n    };\r\n\r\n\r\n    var departmentList = \"departmentlist\";\r\n\r\n    var getDepartmentList = function () {\r\n        return departmentList;\r\n    };\r\n\r\n\r\n    var department = \"department\";\r\n\r\n    var getDepartment = function () {\r\n        return department;\r\n    };\r\n\r\n\r\n    var medicalConditionList = \"medicalconditionlist\";\r\n\r\n    var getMedicalConditionList = function () {\r\n        return medicalConditionList;\r\n    };\r\n\r\n\r\n    var medicalCondition = \"medicalcondition\";\r\n\r\n    var getMedicalCondition = function () {\r\n        return medicalCondition;\r\n    };\r\n\r\n\r\n    var medicalConditionTierList = \"medicalconditiontierlist\";\r\n\r\n    var getMedicalConditionTierList = function () {\r\n        return medicalConditionTierList;\r\n    };\r\n\r\n\r\n    var medicalConditionTier = \"medicalconditiontier\";\r\n\r\n    var getMedicalConditionTier = function () {\r\n        return medicalConditionTier;\r\n    };\r\n\r\n\r\n    var shelterTypeList = \"sheltertypelist\";\r\n\r\n    var getShelterTypeList = function () {\r\n        return shelterTypeList;\r\n    };\r\n\r\n\r\n    var shelterType = \"sheltertype\";\r\n\r\n    var getShelterType = function () {\r\n        return shelterType;\r\n    };\r\n\r\n\r\n    var sheltreeEmployeeRatioList = \"sheltreeemployeeratiolist\";\r\n\r\n    var getSheltreeEmployeeRatioList = function () {\r\n        return sheltreeEmployeeRatioList;\r\n    };\r\n\r\n\r\n    var sheltreeEmployeeRatio = \"sheltreeemployeeratio\";\r\n\r\n    var getSheltreeEmployeeRatio = function () {\r\n        return sheltreeEmployeeRatio;\r\n    };\r\n\r\n\r\n    var staffSpecialtyList = \"staffspecialtylist\";\r\n\r\n    var getStaffSpecialtyList = function () {\r\n        return staffSpecialtyList;\r\n    };\r\n\r\n\r\n    var staffSpecialty = \"staffspecialty\";\r\n\r\n    var getStaffSpecialty = function () {\r\n        return staffSpecialty;\r\n    };\r\n\r\n\r\n\r\n    var staffTypeList = \"stafftypelist\";\r\n\r\n    var getStaffTypeList = function () {\r\n        return staffTypeList;\r\n    };\r\n\r\n\r\n    var staffType = \"stafftype\";\r\n\r\n    var getStaffType = function () {\r\n        return staffType;\r\n    };\r\n\r\n\r\n    var transportTypeList = \"transportationtypelist\";\r\n\r\n    var getTransportTypeList = function () {\r\n        return transportTypeList;\r\n    };\r\n\r\n\r\n    var transportType = \"transportationtype\";\r\n\r\n    var getTransportType = function () {\r\n        return transportType;\r\n    };\r\n\r\n\r\n    var dispositionList = \"dispositionlist\";\r\n\r\n    var getDispositionList = function () {\r\n        return dispositionList;\r\n    };\r\n\r\n\r\n    var disposition = \"disposition\";\r\n\r\n    var getDisposition = function () {\r\n        return disposition;\r\n    };\r\n\r\n\r\n    var equipmentSupplyList = \"equipmentsupplylist\";\r\n\r\n    var getequipmentSupplyList = function () {\r\n        return equipmentSupplyList;\r\n    };\r\n\r\n\r\n    var equipmentSupply = \"equipmentsupply\";\r\n\r\n    var getequipmentSupply = function () {\r\n        return equipmentSupply;\r\n    };\r\n\r\n\r\n    var shelterIdentificationList = \"shelteridentificationlist\";\r\n\r\n    var getshelterIdentificationList = function () {\r\n        return shelterIdentificationList;\r\n    };\r\n\r\n\r\n    var shelterIdentification = \"shelteridentification\";\r\n\r\n    var getshelterIdentification = function () {\r\n        return shelterIdentification;\r\n    };\r\n\r\n\r\n    var questionList = \"questionlist\";\r\n\r\n    var getQuestionList = function () {\r\n        return questionList;\r\n    };\r\n\r\n\r\n    var question = \"question\";\r\n\r\n    var getQuestion = function () {\r\n        return question;\r\n    };\r\n\r\n    var eventList = \"eventlist\";\r\n\r\n    var getEventList = function () {\r\n        return eventList;\r\n    };\r\n\r\n\r\n    var event = \"event\";\r\n\r\n    var getEvent= function () {\r\n        return event;\r\n    };\r\n   \r\n    //end of admin routes\r\n    \r\n\r\n    //start of shelter routes\r\n\r\n\r\n    var shelterStatus = \"shelterstatus\";\r\n\r\n    var getShelterStatus = function () {\r\n        return shelterStatus;\r\n    };\r\n\r\n\r\n    //end of shelter routes\r\n\r\n\r\n\r\n    //start of employee routes\r\n\r\n\r\n    var employeeList = \"employeelist\";\r\n\r\n    var getEmployeeList = function () {\r\n        return employeeList;\r\n    };\r\n    \r\n\r\n    var employeeExtendedList = \"employeeextendedlist\";\r\n\r\n    var getEmployeeExtendedList = function () {\r\n        return employeeExtendedList;\r\n    };\r\n\r\n\r\n    var employee = \"employee\";\r\n\r\n    var getEmployee = function () {\r\n        return employee;\r\n    };\r\n    \r\n\r\n    var bulkUpdateEmployee = \"bulkupdateemployee\";\r\n\r\n    var getBulkUpdateEmployee = function () {\r\n        return bulkUpdateEmployee;\r\n    };\r\n\r\n    var bulkUpdateEmployeeExtended = \"bulkupdateemployeeextended\";\r\n\r\n    var getBulkUpdateEmployeeExtended = function () {\r\n        return bulkUpdateEmployeeExtended;\r\n    };\r\n    \r\n\r\n    var downloadEmployee = \"downloademployee\";\r\n\r\n    var getDownloadEmployee = function () {\r\n        return downloadEmployee;\r\n    };\r\n\r\n\r\n    var uploadEmployee = \"uploademployee\";\r\n\r\n    var getUploadEmployee = function () {\r\n        return uploadEmployee;\r\n    };\r\n\r\n    var employeeAttendance = \"employeeattendance\";\r\n\r\n    var getEmployeeAttendance = function () {\r\n        return employeeAttendance;\r\n    };\r\n    \r\n    var employeeAttendanceComments = \"comments\";\r\n\r\n    var getEmployeeAttendanceComments = function () {\r\n        return employeeAttendanceComments;\r\n    };\r\n\r\n\r\n    var bulkUpdateEmployeeAttendance = \"bulkupdateemployeeattendance\";\r\n\r\n    var getBulkUpdateEmployeeAttendance = function () {\r\n        return bulkUpdateEmployeeAttendance;\r\n    };\r\n\r\n\r\n    var multiFacilityEmployeeAttendance = \"multifacilityemployeeattendance\";\r\n\r\n    var getMultiFacilityEmployeeAttendance = function () {\r\n        return multiFacilityEmployeeAttendance;\r\n    };\r\n\r\n    var multiFacilityEmployeeExtendedList = \"multifacilityemployeeextendedlist\";\r\n\r\n    var getMultiFacilityEmployeeExtendedList = function () {\r\n        return multiFacilityEmployeeExtendedList;\r\n    };\r\n    var multiFacilityEmployeeList = \"multifacilityemployeelist\";\r\n\r\n    var getMultiFacilityEmployeeList = function () {\r\n        return multiFacilityEmployeeList;\r\n    };\r\n\r\n\r\n    //end of employee routes\r\n   \r\n\r\n    //start of shelteree routes\r\n\r\n\r\n    var sheltereeList = \"sheltereelist\";\r\n\r\n    var getSheltereeList = function () {\r\n        return sheltereeList;\r\n    };\r\n   \r\n    var sheltereeMedicalUpdateList = \"sheltereemedicalupdatelist\";\r\n\r\n    var getSheltereeMedicalUpdateList = function () {\r\n        return sheltereeMedicalUpdateList;\r\n    };\r\n\r\n    var sheltereeDischargeList = \"sheltereedischargelist\";\r\n\r\n    var getSheltereeDischargeList = function () {\r\n        return sheltereeDischargeList;\r\n    };\r\n    \r\n    var shelteree = \"shelteree\";\r\n\r\n    var getShelteree = function () {\r\n        return shelteree;\r\n    };\r\n\r\n\r\n    var bulkUpdateShelteree = \"bulkupdateshelteree\";\r\n\r\n    var getBulkUpdateShelteree = function () {\r\n        return bulkUpdateShelteree;\r\n    };\r\n\r\n    var bulkUpdateSheltereeDischarge = \"bulkupdatesheltereedischarge\";\r\n\r\n    var getBulkUpdateSheltereeDischarge = function () {\r\n        return bulkUpdateSheltereeDischarge;\r\n    };\r\n\r\n\r\n    var bulkUpdateSheltereeMedicalUpdate = \"bulkupdatesheltereemedicalupdate\";\r\n\r\n    var getBulkUpdateSheltereeMedicalUpdate = function () {\r\n        return bulkUpdateSheltereeMedicalUpdate;\r\n    };\r\n\r\n    var downloadShelteree = \"downloadshelteree\";\r\n\r\n    var getDownloadShelteree = function () {\r\n        return downloadShelteree;\r\n    };\r\n\r\n\r\n    var uploadShelteree = \"uploadshelteree\";\r\n\r\n    var getUploadShelteree = function () {\r\n        return uploadShelteree;\r\n    };\r\n\r\n\r\n\r\n\r\n    //end of shelteree routes\r\n    \r\n    //start of report routes\r\n\r\n\r\n    var staffRawDataReport = \"staffrawdatareport\";\r\n\r\n    var getStaffRawDataReport = function () {\r\n        return staffRawDataReport;\r\n    };\r\n\r\n\r\n    var staffAttendanceRawDataReport = \"staffattendancerawdatareport\";\r\n\r\n    var getStaffAttendanceRawDataReport = function () {\r\n        return staffAttendanceRawDataReport;\r\n    };\r\n\r\n\r\n    var sheltereeRawDataReport = \"sheltereerawdatareport\";\r\n\r\n    var getSheltereeRawDataReport = function () {\r\n        return sheltereeRawDataReport;\r\n    };\r\n\r\n    //end of report routes\r\n\r\n    return {\r\n\r\n        /*start of other routes */\r\n\r\n        getNoPermission: getNoPermission,\r\n        getNoRole: getNoRole,\r\n        getNoActiveEvent : getNoActiveEvent,\r\n        /*end of other module routes */\r\n\r\n\r\n        //start of admin routes\r\n\r\n        getAgencyList: getAgencyList,\r\n        getAgency: getAgency,\r\n        getDepartmentList: getDepartmentList,\r\n        getDepartment: getDepartment,\r\n        getMedicalConditionList: getMedicalConditionList,\r\n        getMedicalCondition: getMedicalCondition,\r\n        getMedicalConditionTierList: getMedicalConditionTierList,\r\n        getMedicalConditionTier: getMedicalConditionTier,\r\n        getShelterTypeList: getShelterTypeList,\r\n        getShelterType: getShelterType,\r\n        getSheltreeEmployeeRatioList: getSheltreeEmployeeRatioList,\r\n        getSheltreeEmployeeRatio: getSheltreeEmployeeRatio,\r\n        getStaffSpecialtyList: getStaffSpecialtyList,\r\n        getStaffSpecialty: getStaffSpecialty,\r\n        getStaffTypeList: getStaffTypeList,\r\n        getStaffType: getStaffType,\r\n        getTransportTypeList: getTransportTypeList,\r\n        getTransportType: getTransportType,\r\n        getDispositionList: getDispositionList,\r\n        getDisposition: getDisposition,\r\n        getequipmentSupplyList: getequipmentSupplyList,\r\n        getequipmentSupply: getequipmentSupply,\r\n        getshelterIdentification: getshelterIdentification,\r\n        getshelterIdentificationList:getshelterIdentificationList,\r\n        getQuestionList: getQuestionList,\r\n        getQuestion: getQuestion,\r\n        getEventList: getEventList,\r\n        getEvent: getEvent,\r\n        //end of admin routes\r\n\r\n\r\n        //start of shelter routes\r\n\r\n        getShelterStatus:getShelterStatus,\r\n\r\n        //end of shelter routes\r\n\r\n\r\n        //start of employee routes\r\n\r\n        getEmployeeList: getEmployeeList,\r\n        getEmployeeExtendedList:getEmployeeExtendedList,\r\n        getEmployee: getEmployee,\r\n        getBulkUpdateEmployee: getBulkUpdateEmployee,\r\n        getBulkUpdateEmployeeExtended:getBulkUpdateEmployeeExtended,\r\n        getDownloadEmployee:getDownloadEmployee,\r\n        getUploadEmployee:getUploadEmployee,\r\n        getEmployeeAttendance: getEmployeeAttendance,\r\n        getBulkUpdateEmployeeAttendance: getBulkUpdateEmployeeAttendance,\r\n        getMultiFacilityEmployeeAttendance: getMultiFacilityEmployeeAttendance,\r\n        getMultiFacilityEmployeeExtendedList: getMultiFacilityEmployeeExtendedList,\r\n        getMultiFacilityEmployeeList: getMultiFacilityEmployeeList,\r\n\r\n        //end of employee routes\r\n\r\n\r\n        //start of shelteree routes\r\n\r\n        getSheltereeList: getSheltereeList,\r\n        getSheltereeMedicalUpdateList: getSheltereeMedicalUpdateList,\r\n        getSheltereeDischargeList: getSheltereeDischargeList,\r\n        getShelteree: getShelteree,\r\n        getBulkUpdateShelteree: getBulkUpdateShelteree,\r\n        getBulkUpdateSheltereeDischarge: getBulkUpdateSheltereeDischarge,\r\n        getBulkUpdateSheltereeMedicalUpdate: getBulkUpdateSheltereeMedicalUpdate,\r\n        getDownloadShelteree: getDownloadShelteree,\r\n        getUploadShelteree: getUploadShelteree,\r\n\r\n        //end of shelteree routes\r\n\r\n        //start of report routes\r\n\r\n        getStaffRawDataReport: getStaffRawDataReport,\r\n        getStaffAttendanceRawDataReport: getStaffAttendanceRawDataReport,\r\n        getSheltereeRawDataReport: getSheltereeRawDataReport\r\n\r\n        //end  of report routes\r\n    };\r\n} ();","//Message types, Acknowledge Types and response message validation\r\n$ct.mt = function () {\r\n\r\n\r\n    // This object corresponds to AcknowledgeTypeEnum enum in service layer\r\n    var acknowledgeType = {\r\n        success: \"success\",\r\n        failure: \"failure\"\r\n    }\r\n\r\n\r\n    var getAcknowledgeTypeSuccess = function () {\r\n        return acknowledgeType.success;\r\n    };\r\n\r\n    var getAcknowledgeTypeFailure = function () {\r\n        return acknowledgeType.failure;\r\n    };\r\n\r\n    var isError = function (response) {\r\n\r\n        var error = false;\r\n\r\n        if (getAcknowledgeTypeSuccess() !== $ct.helpers.toLower(response.AcknowledgeType)) {\r\n\r\n            if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n                if (messageTypes.error == $ct.helpers.toLower(response.MessageType) || messageTypes.warning == $ct.helpers.toLower(response.MessageType) || messageTypes.information == $ct.helpers.toLower(response.MessageType) || messageTypes.info == $ct.helpers.toLower(response.MessageType) || messageTypes.message == $ct.helpers.toLower(response.MessageType) || messageTypes.exportToExcel == $ct.helpers.toLower(response.MessageType) || messageTypes.businessRuleValidation == $ct.helpers.toLower(response.MessageType)) {\r\n                    error = true;\r\n                }\r\n            }\r\n            else {\r\n                error = true;\r\n            }\r\n        }\r\n\r\n        return error;\r\n\r\n    };\r\n\r\n    var getErrorObject = function (response) {\r\n\r\n        if (isError(response)) {\r\n\r\n            var errorObject = {};\r\n\r\n            if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n                errorObject.messageType = response.MessageType;\r\n            }\r\n            else {\r\n                errorObject.messageType = messageTypes.error;\r\n            }\r\n\r\n            if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n                errorObject.message = response.Message;\r\n            }\r\n            else {\r\n                errorObject.message = \"Error please contact administrator\";\r\n            }\r\n\r\n            return errorObject;\r\n        }\r\n\r\n        return null;\r\n\r\n    };\r\n\r\n\r\n\r\n    // This object corresponds to MessageTypeEnum enum in service layer\r\n    var messageTypes = {\r\n\r\n        //Download is removed\r\n        success: \"success\",\r\n        error: \"error\",\r\n        warning: \"warning\",\r\n        information: \"information\",\r\n        info: \"info\",\r\n        message: \"message\",\r\n        versionConflict: \"versionconflict\",\r\n        noDataFound: \"nodatafound\",\r\n        noActiveEvent: \"noactiveevent\",\r\n        exportToExcel: \"exporttoexcel\" ,\r\n        businessRuleValidation: \"businessrulevalidation\",\r\n        authentication: \"authentication\",\r\n        concurrentEvent: \"concurrentevent\"\r\n\r\n    };\r\n\r\n    var getSuccess = function () {\r\n        return messageTypes.success;\r\n    };\r\n\r\n    var getError = function () {\r\n        return messageTypes.error;\r\n    };\r\n\r\n    var getWarning = function () {\r\n        return messageTypes.warning;\r\n    };\r\n\r\n    var getInformation = function () {\r\n        return messageTypes.information;\r\n    };\r\n\r\n    var getInfo = function () {\r\n        return messageTypes.info;\r\n    };\r\n\r\n    var getMessage = function () {\r\n        return messageTypes.message;\r\n    };\r\n\r\n    var getVersionConflict = function () {\r\n        return messageTypes.versionConflict;\r\n    };\r\n\r\n    var getNoDataFound = function () {\r\n        return messageTypes.noDataFound;\r\n    };\r\n\r\n\r\n    var getAuthentication = function () {\r\n        return messageTypes.authentication;\r\n    };\r\n\r\n    var getConcurrentEvent = function () {\r\n        return messageTypes.concurrentEvent;\r\n    };\r\n\r\n\r\n    var isAuthenticationFailed = function (response) {\r\n\r\n        if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n            if (messageTypes.authentication === $ct.helpers.toLower(response.MessageType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    };\r\n\r\n    var isVersionConflict = function (response) {\r\n\r\n        if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n            if (messageTypes.versionConflict === $ct.helpers.toLower(response.MessageType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    };\r\n\r\n    var isNoDataFound = function (response) {\r\n\r\n        if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n            if (messageTypes.noDataFound === $ct.helpers.toLower(response.MessageType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    };\r\n\r\n\r\n    var isBusinessRule = function (response) {\r\n\r\n        if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n            if (messageTypes.businessRuleValidation === $ct.helpers.toLower(response.MessageType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    };\r\n\r\n\r\n    var isNoActiveEvent = function (response) {\r\n\r\n        if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n            if (messageTypes.noActiveEvent === $ct.helpers.toLower(response.MessageType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    };\r\n\r\n\r\n    var isConcurrentEvent = function (response) {\r\n\r\n        if ((response.MessageType !== undefined) && (response.MessageType !== null)) {\r\n            if (messageTypes.concurrentEvent === $ct.helpers.toLower(response.MessageType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    };\r\n\r\n\r\n    return {\r\n\r\n        //Acknowledge types\r\n        getAcknowledgeTypeSuccess: getAcknowledgeTypeSuccess,\r\n        getAcknowledgeTypeFailure: getAcknowledgeTypeFailure,\r\n\r\n        //Message types\r\n        getSuccess: getSuccess,\r\n        getError: getError,\r\n        getWarning: getWarning,\r\n        getInformation: getInformation,\r\n        getInfo: getInfo,\r\n        getMessage: getMessage,\r\n        getVersionConflict: getVersionConflict,\r\n        getNoDataFound: getNoDataFound,\r\n        getAuthentication: getAuthentication,\r\n        getConcurrentEvent: getConcurrentEvent,\r\n\r\n        //Message type validations\r\n        isAuthenticationFailed : isAuthenticationFailed,\r\n        isVersionConflict: isVersionConflict,\r\n        isNoDataFound: isNoDataFound,\r\n        isBusinessRule : isBusinessRule,\r\n        isNoActiveEvent: isNoActiveEvent,\r\n        isConcurrentEvent: isConcurrentEvent,\r\n\r\n        isError : isError,\r\n        getErrorObject: getErrorObject\r\n\r\n    };\r\n} ();","//styles\r\n$ct.styles = function () {\r\n\r\n    var validDataBorder = \"1px solid #00ff00\";\r\n\r\n    var getValidDataBorder = function () {\r\n        return validDataBorder;\r\n    };\r\n\r\n\r\n    var invalidDataBorder = \"1px solid #ff0000\";\r\n\r\n    var getInvalidDataBorder = function () {\r\n        return invalidDataBorder;\r\n    };\r\n\r\n\r\n    var noneStyle = \"none\";\r\n\r\n    var getNoneStyle = function () {\r\n        return noneStyle;\r\n    };\r\n\r\n\r\n    var blockStyle = \"block\";\r\n\r\n    var getBlockStyle = function () {\r\n        return blockStyle;\r\n    };\r\n\r\n    var inlineBlockStyle = \"inline-block\";\r\n\r\n    var getInlineBlockStyle = function () {\r\n        return inlineBlockStyle;\r\n    };\r\n\r\n    var removeInvalidDataBorder = \"\";\r\n\r\n    var getRemoveInvalidDataBorder = function () {\r\n        return removeInvalidDataBorder;\r\n    };\r\n\r\n\r\n    var displayInlineBlockClass = \"displayInlineBlock\";\r\n\r\n    var getDisplayInlineBlockClass = function () {\r\n        return displayInlineBlockClass;\r\n    };\r\n\r\n    var displayNoneImportantClass = \"displayNoneImportant\";\r\n\r\n    var getDisplayNoneImportantClass = function () {\r\n        return displayNoneImportantClass;\r\n    };\r\n\r\n\r\n\r\n    var dataInvalidClass = \"datainvalidcolor\";\r\n\r\n    var getDataInvalidClass = function () {\r\n        return dataInvalidClass;\r\n    };\r\n\r\n\r\n    var noClass = \"\";\r\n\r\n    var getNoClass = function () {\r\n        return noClass;\r\n    };\r\n\r\n\r\n    //staus update classes\r\n\r\n    var redBorderStatusUpdate = \"redBrdr\";\r\n\r\n    var getRedBorderStatusUpdate = function () {\r\n        return redBorderStatusUpdate;\r\n    };\r\n\r\n    var greyBorderStatusUpdate = \"greyBrdr\";\r\n\r\n    var getGreyBorderStatusUpdate = function () {\r\n        return greyBorderStatusUpdate;\r\n    };\r\n\r\n    var redBorderClass = \"redBorder\";\r\n\r\n    var getRedBorderClass = function () {\r\n        return redBorderClass;\r\n    };\r\n\r\n    var greenBorderClass = \"greenBorder\";\r\n\r\n    var getGreenBorderClass = function () {\r\n        return greenBorderClass;\r\n    };\r\n\r\n    var grayBorderClass = \"greyBorder\";\r\n\r\n    var getGrayBorderClass = function () {\r\n        return grayBorderClass;\r\n    };\r\n\r\n    var okCircleClass = \"icon-ok-circle\";\r\n\r\n    var getOkCircleClass = function () {\r\n        return okCircleClass;\r\n    };\r\n\r\n\r\n    var attentionClass = \"icon-attention\";\r\n\r\n    var getAttentionClass = function () {\r\n        return attentionClass;\r\n    };\r\n\r\n    var emptyIconClass = \"icon-right-dir\";\r\n\r\n    var getEmptyIconClass = function () {\r\n        return emptyIconClass;\r\n    };\r\n\r\n    //staus update classes end\r\n\r\n    //message header classes\r\n\r\n    var redBackgroundClass = \"imp-message_red\";\r\n\r\n    var getRedBackgroundClass = function () {\r\n        return redBackgroundClass;\r\n    };\r\n\r\n    var grayBackgroundClass = \"imp-message_grey\";\r\n\r\n    var getGrayBackgroundClass = function () {\r\n        return grayBackgroundClass;\r\n    };\r\n\r\n    var greenBackgroundClass = \"imp-message_green\";\r\n\r\n    var getGreenBackgroundClass = function () {\r\n        return greenBackgroundClass;\r\n    };\r\n\r\n\r\n    var redMessageIconClass = \"imp-message-icon_red\";\r\n\r\n    var getRedMessageIconClass = function () {\r\n        return redMessageIconClass;\r\n    };\r\n\r\n\r\n    var grayMessageIconClass = \"imp-message-icon_grey\";\r\n\r\n    var getGrayMessageIconClass = function () {\r\n        return grayMessageIconClass;\r\n    };\r\n\r\n\r\n    var greenMessageIconClass = \"imp-message-icon_green\";\r\n\r\n    var getGreenMessageIconClass = function () {\r\n        return greenMessageIconClass;\r\n    };\r\n\r\n    //message header classes end\r\n\r\n\r\n    // start of sheltree header classes\r\n\r\n    var completeDataPresentClass = \"sheltree-navigation__complete-data\";\r\n\r\n    var getCompleteDataPresentClass = function () {\r\n        return completeDataPresentClass;\r\n    };\r\n\r\n    var partialDataPresentClass = \"sheltree-navigation__partial-data\";\r\n\r\n    var getPartialDataPresentClass = function () {\r\n        return partialDataPresentClass;\r\n    };\r\n\r\n    var noDataClass = \"sheltree-navigation__no-data\";\r\n\r\n    var getNoDataClass = function () {\r\n        return noDataClass;\r\n    };\r\n\r\n    var activeTabClass = \"sheltree-navigation__focus\";\r\n\r\n    var getActiveTabClass = function () {\r\n        return activeTabClass;\r\n    };\r\n\r\n\r\n    var tabDisabledClass = \"sheltree-navigation__disabled\";\r\n\r\n    var getTabDisabledClass = function () {\r\n        return tabDisabledClass;\r\n    };\r\n\r\n\r\n\r\n    // end of sheltree header classes\r\n\r\n\r\n\r\n\r\n    return {\r\n\r\n        getValidDataBorder: getValidDataBorder,\r\n        getInvalidDataBorder: getInvalidDataBorder,\r\n\r\n        getNoneStyle: getNoneStyle,\r\n        getBlockStyle: getBlockStyle,\r\n        getInlineBlockStyle: getInlineBlockStyle,\r\n\r\n        getDisplayInlineBlockClass: getDisplayInlineBlockClass, \r\n        getDisplayNoneImportantClass : getDisplayNoneImportantClass,\r\n\r\n        getRemoveInvalidDataBorder: getRemoveInvalidDataBorder,\r\n        getDataInvalidClass: getDataInvalidClass,\r\n        getNoClass: getNoClass,\r\n\r\n        //staus update classes\r\n        getRedBorderStatusUpdate: getRedBorderStatusUpdate,\r\n        getGreyBorderStatusUpdate: getGreyBorderStatusUpdate,\r\n        getRedBorderClass: getRedBorderClass,\r\n        getGreenBorderClass: getGreenBorderClass,\r\n        getGrayBorderClass: getGrayBorderClass,\r\n        getOkCircleClass: getOkCircleClass,\r\n        getAttentionClass: getAttentionClass,\r\n        getEmptyIconClass: getEmptyIconClass,\r\n\r\n\r\n        //message header classes\r\n        getRedBackgroundClass: getRedBackgroundClass,\r\n        getGrayBackgroundClass: getGrayBackgroundClass,\r\n        getGreenBackgroundClass: getGreenBackgroundClass,\r\n        getRedMessageIconClass: getRedMessageIconClass,\r\n        getGrayMessageIconClass: getGrayMessageIconClass,\r\n        getGreenMessageIconClass: getGreenMessageIconClass,\r\n\r\n        // start of sheltree header classes\r\n        getCompleteDataPresentClass: getCompleteDataPresentClass,\r\n        getPartialDataPresentClass : getPartialDataPresentClass,\r\n        getNoDataClass: getNoDataClass,\r\n        getActiveTabClass: getActiveTabClass,\r\n        getTabDisabledClass: getTabDisabledClass\r\n        // end of sheltree header classes\r\n    };\r\n} ();","\r\n//Messages\r\n$ct.msg = function () {\r\n\r\n    //Common messages\r\n\r\n    var genericErrorMsg = 'An Unknown Error Occured While Processing Your Request. Please Contact Administrator.';\r\n    var getGenericErrorMsg = function () {\r\n        return genericErrorMsg;\r\n    };\r\n\r\n    var invalidServiceRequestObject = \"Please Configure ServiceRequest Object Properly.\"\r\n    var getInvalidServiceRequestObject = function () {\r\n        return invalidServiceRequestObject;\r\n    };\r\n\r\n    var invalidRequestMsg = \"Invalid Request\";\r\n    var getinvalidRequestMsg = function () {\r\n        return invalidRequestMsg;\r\n    };\r\n\r\n    var invalidResponseForRequestMsg = \"Invalid Response For Request\";\r\n    var getInvalidResponseForRequestMsg = function () {\r\n        return invalidResponseForRequestMsg;\r\n    };\r\n\r\n    var invalidResponseMsg = \" Invalid Response \";\r\n    var getInvalidResponseMsg = function () {\r\n        return invalidResponseMsg;\r\n    };\r\n\r\n    var versionConflictReloadMsg = \"Version Conflict Occured Do You Want To Refresh Data ?\";\r\n    var getVersionConflictReloadMsg = function () {\r\n        return versionConflictReloadMsg;\r\n    };\r\n\r\n    var deleteConfirmationMsg = \"Are You Sure You Want To Delete? \";\r\n    var getDeleteConfirmationMsg = function () {\r\n        return deleteConfirmationMsg;\r\n    };\r\n\r\n    var validationMsg = \"Please Fill Required Data \";\r\n    var getValidationMsg = function () {\r\n        return validationMsg;\r\n    };\r\n\r\n    var successMsg = \" Saved Successfully\";\r\n    var getSuccessMsg = function () {\r\n        return successMsg;\r\n    };\r\n\r\n    var deleteSuccessMsg = \" Deleted Successfully\";\r\n    var getDeleteSuccessMsg = function () {\r\n        return deleteSuccessMsg;\r\n    };\r\n\r\n\r\n    var employeeUploadError = \"Invalid Data\";\r\n    var getEmployeeUploadError = function () {\r\n        return employeeUploadError;\r\n    };\r\n\r\n    var sheltereeUploadError = \"Invalid Data\";\r\n    var getSheltereeUploadError = function () {\r\n        return sheltereeUploadError;\r\n    };\r\n\r\n\r\n\r\n    //Form specific messages\r\n\r\n\r\n\r\n\r\n    var agencySuccessMsg = \"Agency \" + successMsg;\r\n    var getAgencySuccessMsg = function () {\r\n        return agencySuccessMsg;\r\n    };\r\n\r\n    var shelterTypeSuccessMsg = \"ShelterType \" + successMsg;\r\n    var getShelterTypeSuccessMsg = function () {\r\n        return shelterTypeSuccessMsg;\r\n    };\r\n\r\n    var medicalConditionTierSuccessMsg = \"Medical Condition Tier\" + successMsg;\r\n    var getMedicalConditionTierSuccessMsg = function () {\r\n        return medicalConditionTierSuccessMsg\r\n    };\r\n\r\n    var staffSpecialtySuccessMsg = \"Staff Specialty \" + successMsg;\r\n    var getStaffSpecialtySuccessMsg = function () {\r\n        return staffSpecialtySuccessMsg;\r\n    };\r\n    var departmentSuccessMsg = \"Department \" + successMsg;\r\n    var getDepartmentSuccessMsg = function () {\r\n        return departmentSuccessMsg;\r\n    };\r\n    var medicalConditionSuccessMsg = \"Medical Condition \" + successMsg;\r\n    var getMedicalConditionSuccessMsg = function () {\r\n        return medicalConditionSuccessMsg;\r\n    };\r\n    var sheltereeEmployeeSuccessMsg = \"Shelteree Staff Ratio\" + successMsg;\r\n    var getSheltereeEmployeeSuccessMsg = function () {\r\n        return sheltereeEmployeeSuccessMsg;\r\n    };\r\n    var staffTypeSuccessMsg = \"Staff Type \" + successMsg;\r\n    var getStaffTypeSuccessMsg = function () {\r\n        return staffTypeSuccessMsg;\r\n    };\r\n    var transportTypeSuccessMsg = \"Transportation Type\" + successMsg;\r\n    var getTransportTypeSuccessMsg = function () {\r\n        return transportTypeSuccessMsg;\r\n    };\r\n\r\n    var equipmentSupplySuccessMsg = \"Equipment Supply\" + successMsg;\r\n    var getEquipmentSupplySuccessMsg = function () {\r\n        return equipmentSupplySuccessMsg;\r\n    };\r\n\r\n    var questionSuccessMsg = \"Question\" + successMsg;\r\n    var getQuestionSuccessMsg = function () {\r\n        return questionSuccessMsg;\r\n    };\r\n\r\n    var questionResponseSuccessMsg = \"Question Response\" + successMsg;\r\n    var getQuestionResponseSuccessMsg = function () {\r\n        return questionResponseSuccessMsg;\r\n    };\r\n\r\n\r\n    var eventSuccessMsg = \"Event\" + successMsg;\r\n    var getEventSuccessMsg = function () {\r\n        return eventSuccessMsg;\r\n    };\r\n\r\n\r\n\r\n    var questionDeleteSuccessMsg = \"Question\" + deleteSuccessMsg;\r\n    var getQuestionDeleteSuccessMsg = function () {\r\n        return questionDeleteSuccessMsg;\r\n    };\r\n    var agencyDeleteSuccessMsg = \"Agency \" + deleteSuccessMsg;\r\n    var getAgencyDeleteSuccessMsg = function () {\r\n        return agencyDeleteSuccessMsg;\r\n    };\r\n\r\n    var medicalConditionTierDeleteSuccessMsg = \"Medical Condition Tier\" + deleteSuccessMsg;\r\n    var getMedicalConditionTierDeleteSuccessMsg  = function () {\r\n        return medicalConditionTierDeleteSuccessMsg \r\n    };\r\n\r\n    var shelterTypeDeleteSuccessMsg = \"Shelter Type \" + deleteSuccessMsg;\r\n    var getShelterTypeDeleteSuccessMsg = function () {\r\n        return shelterTypeDeleteSuccessMsg;\r\n    };\r\n\r\n    var staffSpecialtyDeleteSuccessMsg = \"Staff Specialty \" + deleteSuccessMsg;\r\n    var getStaffSpecialtyDeleteSuccessMsg = function () {\r\n        return staffSpecialtyDeleteSuccessMsg;\r\n    };\r\n\r\n    var departmentDeleteSuccessMsg = \"Department \" + deleteSuccessMsg;\r\n    var getDepartmentDeleteSuccessMsg = function () {\r\n        return departmentDeleteSuccessMsg;\r\n    };\r\n    var medicalConditionDeleteSuccessMsg = \"Medical Condition \" + deleteSuccessMsg;\r\n    var getMedicalConditionDeleteSuccessMsg = function () {\r\n        return medicalConditionDeleteSuccessMsg;\r\n    };\r\n    var sheltereeEmployeeDeleteSuccessMsg = \"Shelteree Staff Ratio\" + deleteSuccessMsg;\r\n    var getSheltereeEmployeeDeleteSuccessMsg = function () {\r\n        return sheltereeEmployeeDeleteSuccessMsg;\r\n    };\r\n    var staffTypeDeleteSuccessMsg = \"Staff Type \" + deleteSuccessMsg;\r\n    var getStaffTypeDeleteSuccessMsg = function () {\r\n        return staffTypeDeleteSuccessMsg;\r\n    };\r\n    var transportTypeDeleteSuccessMsg = \"Transportation Type \" + deleteSuccessMsg;\r\n    var getTransportTypeDeleteSuccessMsg = function () {\r\n        return transportTypeDeleteSuccessMsg;\r\n    };\r\n\r\n\r\n    var shelterIdentificationDeleteSuccessMsg = \"Shelter Identification \" + deleteSuccessMsg;\r\n    var getShelterIdentificationDeleteSuccessMsg = function () {\r\n        return shelterIdentificationDeleteSuccessMsg;\r\n    };\r\n   \r\n\r\n    var shelterIdentificationSuccessMsg = \"Shelter Identification \" + successMsg;\r\n    var getShelterIdentificationSuccessMsg = function () {\r\n        return shelterIdentificationSuccessMsg;\r\n    };\r\n\r\n    var eventDeleteSuccessMsg = \"Event \" + deleteSuccessMsg;\r\n    var getEventDeleteSuccessMsg = function () {\r\n        return eventDeleteSuccessMsg;\r\n    };\r\n    \r\n    var uploadValidFile = \"Please Select Excel File(.xls,.xslx)\";\r\n    var getUploadValidFile = function () {\r\n        return uploadValidFile;\r\n    };\r\n    \r\n\r\n    var validateUploadEmployees = \"Please Select Import Action\";\r\n    var getEmployeesUploadImportOption = function () {\r\n        return validateUploadEmployees;\r\n    };\r\n\r\n\r\n    // employee related messages\r\n\r\n    var EmployeeSuccessMsg = \"Staff\" + successMsg;\r\n    var getEmployeeSuccessMsg = function () {\r\n        return EmployeeSuccessMsg;\r\n    };\r\n\r\n\r\n    var employeeDeleteSuccessMsg = \"Staff \" + deleteSuccessMsg;\r\n    var getEmployeeDeleteSuccessMsg = function () {\r\n        return employeeDeleteSuccessMsg;\r\n    };\r\n\r\n    var employeeUploadSuccessMsg = \"Data \" + successMsg;\r\n    var getEmployeeUploadSuccessMsg = function () {\r\n        return employeeUploadSuccessMsg;\r\n    };\r\n\r\n\r\n    var employeeAttendenceUpdatedSuccessMsg = \"Staff Attendence\" + successMsg;\r\n    var getEmployeeAttendenceUpdatedSuccessMsg = function () {\r\n        return employeeAttendenceUpdatedSuccessMsg;\r\n    };\r\n\r\n    var dispositionDeleteSuccessMsg = \"Disposition \" + deleteSuccessMsg;\r\n    var getDispositionDeleteSuccessMsg = function () {\r\n        return dispositionDeleteSuccessMsg;\r\n    };\r\n\r\n    var dispositionSuccessMsg = \"Disposition \" + successMsg;\r\n    var getDispositionSuccessMsg = function () {\r\n        return dispositionSuccessMsg;\r\n    };\r\n\r\n\r\n    var equipmentSupplyDeleteSuccessMsg = \"Equipment Supply \" + deleteSuccessMsg;\r\n    var getequipmentSupplyDeleteSuccessMsg = function () {\r\n        return equipmentSupplyDeleteSuccessMsg;\r\n    };\r\n\r\n    // shelterstatus related messages\r\n\r\n    var ShelterStatusSuccessMsg = \"Shelter Status\" + successMsg;\r\n    var getShelterStatusSuccessMsg = function () {\r\n        return ShelterStatusSuccessMsg;\r\n    };\r\n\r\n    // shelteree related messages\r\n\r\n    var sheltereeSuccessMsg = \"Shelteree\" + successMsg;\r\n    var getSheltereeSuccessMsg = function () {\r\n        return sheltereeSuccessMsg;\r\n    };\r\n\r\n\r\n    var sheltereeUploadSuccessMsg = \"Data \" + successMsg;\r\n    var getSheltereeUploadSuccessMsg = function () {\r\n        return sheltereeUploadSuccessMsg;\r\n    };\r\n\r\n    var sheltereeMedicalConditionUpdateListSuccessMsg = \"Medical Condition Update  Comment \" + successMsg;\r\n    var getSheltereeMedicalConditionUpdateListCommentSuccessMsg = function () {\r\n        return sheltereeMedicalConditionUpdateListSuccessMsg;\r\n    };\r\n\r\n    var demographicsSuccessMsg = \"Demographics \" + successMsg;\r\n    var getDemographicsSuccessMsg = function () {\r\n        return demographicsSuccessMsg;\r\n    };\r\n\r\n    var medicalSuccessMsg = \"Medical \" + successMsg;\r\n    var getMedicalSuccessMsg = function () {\r\n        return medicalSuccessMsg;\r\n    };\r\n\r\n    var treatmentsSuccessMsg = \"Treatments \" + successMsg;\r\n    var getTreatmentsSuccessMsg = function () {\r\n        return treatmentsSuccessMsg;\r\n    };\r\n\r\n    var equipmentSuccessMsg = \"Equipment \" + successMsg;\r\n    var getEquipmentSuccessMsg = function () {\r\n        return equipmentSuccessMsg;\r\n    };\r\n\r\n    var medicationSuccessMsg = \"Medication\" + successMsg;\r\n    var getMedicationSuccessMsg = function () {\r\n        return medicationSuccessMsg;\r\n    };\r\n    \r\n    var sheltereeDispositionSuccessMsg = \"Disposition \" + successMsg;\r\n    var getSheltereeDispostionSuccessMsg = function () {\r\n        return sheltereeDispositionSuccessMsg;\r\n    };\r\n\r\n    var incompletesheltereetabdatawarningMsg = \" Current tab has incomplete data, do you want to proceed?\";\r\n    var getIncompletesheltereetabdatawarningMsg = function () {\r\n        return incompletesheltereetabdatawarningMsg;\r\n    };\r\n    \r\n\r\n\r\n    var sheltereeDeleteSuccessMsg = \"Shelteree \" + deleteSuccessMsg;\r\n    var getSheltereeDeleteSuccessMsg = function () {\r\n        return sheltereeDeleteSuccessMsg;\r\n    };\r\n\r\n   \r\n    \r\n\r\n    //specific validation messages\r\n\r\n    var staffTypeValidationMsg = \"Please Select Atleast One Staff Type\";\r\n    var getStaffTypeValidationMsg = function () {\r\n        return staffTypeValidationMsg;\r\n    };\r\n\r\n    var staffSpecialtyValidationMsg = \"Please Select Atleast One Medical Condition\";\r\n    var getStaffSpecialtyValidationMsg = function () {\r\n        return staffSpecialtyValidationMsg;\r\n    };\r\n\r\n    var bulkUpdateEmployeeValidationMsg = \"Please Select Records To Bulk Update\";\r\n    var getBulkUpdateEmployeeValidationMsg = function () {\r\n        return bulkUpdateEmployeeValidationMsg;\r\n    };\r\n\r\n    var bulkUpdateEmployeeAttendanceValidationMsg = \"Please Select Atleast One Staff\";\r\n    var getBulkUpdateEmployeeAttendanceValidationMsg = function () {\r\n        return bulkUpdateEmployeeAttendanceValidationMsg;\r\n    };\r\n    \r\n\r\n    var bulkUpdateEmployeeExtendedValidationMsg = \"Please Select Records To Bulk Update\";\r\n    var getBulkUpdateEmployeeExtendedValidationMsg = function () {\r\n        return bulkUpdateEmployeeExtendedValidationMsg;\r\n    };\r\n\r\n    var bulkUpdateSheltereeValidationMsg = \"Please Select Records To Bulk Update\";\r\n    var getBulkUpdateSheltereeValidationMsg = function () {\r\n        return bulkUpdateSheltereeValidationMsg;\r\n    };\r\n\r\n    var bulkUpdateSheltreeDischargeValidationMsg = \"Please Select Records To Bulk Update\";\r\n    var getBulkUpdateSheltreeDischargeValidationMsg = function () {\r\n        return bulkUpdateSheltreeDischargeValidationMsg;\r\n    };\r\n\r\n    var bulkUpdateSheltreeMedicalUpdateValidationMsg = \"Please Select Records To Bulk Update\";\r\n    var getBulkUpdateSheltreeMedicalUpdateValidationMsg = function () {\r\n        return bulkUpdateSheltreeMedicalUpdateValidationMsg;\r\n    };\r\n    \r\n    var reportSheltersValidationMsg = \"Please Fill Required Data\";\r\n    var getReportSheltersValidationMsg = function () {\r\n        return reportSheltersValidationMsg;\r\n    };\r\n\r\n    var reportEventsValidationMsg = \"Please Fill Required Data\";\r\n    var getReportEventsValidationMsg = function () {\r\n        return reportEventsValidationMsg;\r\n    };\r\n\r\n    \r\n    return {\r\n\r\n        //Common messages\r\n        getGenericErrorMsg: getGenericErrorMsg,\r\n        getInvalidServiceRequestObject: getInvalidServiceRequestObject,\r\n        getinvalidRequestMsg: getinvalidRequestMsg,\r\n        getInvalidResponseForRequestMsg: getInvalidResponseForRequestMsg,\r\n        getInvalidResponseMsg: getInvalidResponseMsg,\r\n        getVersionConflictReloadMsg: getVersionConflictReloadMsg,\r\n        getDeleteConfirmationMsg: getDeleteConfirmationMsg,\r\n        getValidationMsg: getValidationMsg,\r\n        getEmployeeUploadError:getEmployeeUploadError,\r\n    \r\n\r\n        //Form specific messages\r\n        \r\n        \r\n\r\n        //Admin related messages\r\n        getSuccessMsg: getSuccessMsg,\r\n        getAgencySuccessMsg: getAgencySuccessMsg,\r\n        getShelterTypeSuccessMsg: getShelterTypeSuccessMsg,\r\n        getMedicalConditionTierSuccessMsg: getMedicalConditionTierSuccessMsg,\r\n        getStaffSpecialtySuccessMsg: getStaffSpecialtySuccessMsg,\r\n        getDepartmentSuccessMsg: getDepartmentSuccessMsg,\r\n        getMedicalConditionSuccessMsg: getMedicalConditionSuccessMsg,\r\n        getSheltereeEmployeeSuccessMsg: getSheltereeEmployeeSuccessMsg,\r\n        getStaffTypeSuccessMsg:getStaffTypeSuccessMsg,\r\n        getTransportTypeSuccessMsg: getTransportTypeSuccessMsg,\r\n        getDispositionDeleteSuccessMsg: getDispositionDeleteSuccessMsg,\r\n        getDispositionSuccessMsg:getDispositionSuccessMsg,\r\n        getShelterIdentificationSuccessMsg:getShelterIdentificationSuccessMsg,\r\n        getShelterIdentificationDeleteSuccessMsg:getShelterIdentificationDeleteSuccessMsg,\r\n        getEquipmentSupplySuccessMsg: getEquipmentSupplySuccessMsg,\r\n        getQuestionSuccessMsg:getQuestionSuccessMsg,\r\n        getQuestionResponseSuccessMsg:getQuestionResponseSuccessMsg,\r\n        getEventSuccessMsg: getEventSuccessMsg,\r\n\r\n\r\n        getDeleteSuccessMsg: getDeleteSuccessMsg,\r\n        getAgencyDeleteSuccessMsg: getAgencyDeleteSuccessMsg,\r\n        getShelterTypeDeleteSuccessMsg: getShelterTypeDeleteSuccessMsg,\r\n        getMedicalConditionTierDeleteSuccessMsg: getMedicalConditionTierDeleteSuccessMsg,\r\n        getStaffSpecialtyDeleteSuccessMsg: getStaffSpecialtyDeleteSuccessMsg,\r\n        getDepartmentDeleteSuccessMsg: getDepartmentDeleteSuccessMsg,\r\n        getMedicalConditionDeleteSuccessMsg: getMedicalConditionDeleteSuccessMsg,\r\n        getSheltereeEmployeeDeleteSuccessMsg: getSheltereeEmployeeDeleteSuccessMsg,\r\n        getStaffTypeDeleteSuccessMsg:getStaffTypeDeleteSuccessMsg,\r\n        getTransportTypeDeleteSuccessMsg: getTransportTypeDeleteSuccessMsg,\r\n        getequipmentSupplyDeleteSuccessMsg: getequipmentSupplyDeleteSuccessMsg,\r\n        getQuestionDeleteSuccessMsg:getQuestionDeleteSuccessMsg,\r\n        getEventDeleteSuccessMsg: getEventDeleteSuccessMsg,\r\n\r\n        getUploadValidFile: getUploadValidFile,\r\n        getEmployeesUploadImportOption: getEmployeesUploadImportOption,\r\n\r\n        // employee related messages\r\n\r\n        getEmployeeSuccessMsg: getEmployeeSuccessMsg,\r\n        getEmployeeDeleteSuccessMsg: getEmployeeDeleteSuccessMsg,\r\n        getEmployeeUploadSuccessMsg: getEmployeeUploadSuccessMsg,\r\n\r\n        // shelterstatus related messages\r\n\r\n        getShelterStatusSuccessMsg: getShelterStatusSuccessMsg,\r\n        getEmployeeAttendenceUpdatedSuccessMsg: getEmployeeAttendenceUpdatedSuccessMsg,\r\n\r\n        // shelteree related messages\r\n        getSheltereeSuccessMsg: getSheltereeSuccessMsg,\r\n        getSheltereeDeleteSuccessMsg:getSheltereeDeleteSuccessMsg,\r\n        getSheltereeUploadSuccessMsg: getSheltereeUploadSuccessMsg,\r\n        getSheltereeUploadError: getSheltereeUploadError,\r\n        getSheltereeMedicalConditionUpdateListCommentSuccessMsg: getSheltereeMedicalConditionUpdateListCommentSuccessMsg,\r\n        getDemographicsSuccessMsg: getDemographicsSuccessMsg,\r\n        getMedicalSuccessMsg: getMedicalSuccessMsg,\r\n        getTreatmentsSuccessMsg:getTreatmentsSuccessMsg,\r\n        getEquipmentSuccessMsg: getEquipmentSuccessMsg,\r\n        getMedicationSuccessMsg: getMedicationSuccessMsg,\r\n        getSheltereeDispostionSuccessMsg: getSheltereeDispostionSuccessMsg,\r\n        getIncompletesheltereetabdatawarningMsg:getIncompletesheltereetabdatawarningMsg,\r\n\r\n\r\n        //specific validation messages\r\n        getStaffTypeValidationMsg: getStaffTypeValidationMsg,\r\n        getStaffSpecialtyValidationMsg: getStaffSpecialtyValidationMsg,\r\n        getBulkUpdateEmployeeValidationMsg: getBulkUpdateEmployeeValidationMsg,\r\n        getBulkUpdateEmployeeAttendanceValidationMsg: getBulkUpdateEmployeeAttendanceValidationMsg,\r\n        getBulkUpdateEmployeeExtendedValidationMsg: getBulkUpdateEmployeeExtendedValidationMsg,\r\n        getBulkUpdateSheltereeValidationMsg: getBulkUpdateSheltereeValidationMsg,\r\n        getBulkUpdateSheltreeDischargeValidationMsg: getBulkUpdateSheltreeDischargeValidationMsg,\r\n        getBulkUpdateSheltreeMedicalUpdateValidationMsg: getBulkUpdateSheltreeMedicalUpdateValidationMsg,\r\n        getReportSheltersValidationMsg: getReportSheltersValidationMsg,\r\n        getReportEventsValidationMsg: getReportEventsValidationMsg\r\n\r\n    };\r\n} ();\r\n\r\n\r\n//Help Titles\r\n$ct.ht = function () {\r\n\r\n    var help = \"Help\";\r\n\r\n    var getHelp = function () {\r\n        return help;\r\n    };\r\n\r\n    var operatingStatus = \"Operating Status\";\r\n\r\n    var getOperatingStatus = function () {\r\n        return operatingStatus;\r\n    };\r\n\r\n    return {\r\n\r\n        getHelp: getHelp\r\n       // getOperatingStatus: getOperatingStatus,\r\n\r\n    };\r\n\r\n} ();\r\n\r\n\r\n","\r\n//Most of the configuration constants for the application\r\n\r\n\r\n\r\n\r\n$ct.other = function () {\r\n\r\n    var hospiceId = gloabalHospiceId;\r\n\r\n    var getHospiceId = function () {\r\n        return hospiceId;\r\n    };\r\n\r\n    var miscellaneousSectionId = gloabalMiscellaneousSectionId;\r\n\r\n    var getMiscellaneousSectionId = function () {\r\n        return miscellaneousSectionId;\r\n    };\r\n\r\n    var vitalSignsSectionId = gloabalVitalSignsSectionId;\r\n\r\n    var getVitalSignsSectionId = function () {\r\n        return vitalSignsSectionId;\r\n    };\r\n\r\n\r\n    var employeeTemplateURL = globalBaseServiceUrl + \"uploadtemplate/\" + \"EmployeeUploadTemplate.xlsx\";\r\n\r\n    var getEmployeeTemplateURL = function () {\r\n        return employeeTemplateURL;\r\n    };\r\n\r\n\r\n    var sheltereeTemplateURL = globalBaseServiceUrl + \"uploadtemplate/\" + \"SheltereeUploadTemplate.xlsx\";\r\n\r\n    var getSheltereeTemplateURL = function () {\r\n        return sheltereeTemplateURL;\r\n    };\r\n\r\n\r\n\r\n    return {\r\n        getHospiceId: getHospiceId,\r\n        getMiscellaneousSectionId: getMiscellaneousSectionId,\r\n        getVitalSignsSectionId : getVitalSignsSectionId,\r\n        getEmployeeTemplateURL: getEmployeeTemplateURL,\r\n        getSheltereeTemplateURL: getSheltereeTemplateURL\r\n\r\n    };\r\n\r\n} ();\r\n\r\n\r\n\r\n// role id's for security\r\n$ct.roles = function () {\r\n\r\n    var superAdminId = globalSuperAdminId;\r\n\r\n    var getSuperAdminId = function () {\r\n        return superAdminId;\r\n    };\r\n\r\n    var administratorId = globalAdministratorId;\r\n\r\n    var getAdministratorId = function () {\r\n        return administratorId;\r\n    };\r\n\r\n    var facilityUpdateId = globalFacilityUpdateId;\r\n\r\n    var getFacilityUpdateId = function () {\r\n        return facilityUpdateId;\r\n    };\r\n\r\n    var facilityReadOnlyId = globalFacilityReadOnlyId;\r\n\r\n    var getFacilityReadOnlyId = function () {\r\n        return facilityReadOnlyId;\r\n    };\r\n\r\n\r\n\r\n\r\n    return {\r\n\r\n        getSuperAdminId: getSuperAdminId,\r\n        getAdministratorId: getAdministratorId,\r\n        getFacilityUpdateId: getFacilityUpdateId,\r\n        getFacilityReadOnlyId: getFacilityReadOnlyId\r\n\r\n    };\r\n\r\n} ();\r\n\r\n\r\n","$ct.helpers = function () {\n    // caching message container DOM element\n    var $messageHeader = $('.messages-container');\n\n    // delay will be provided from HTML as a data attribute, so that no need to touch JS in future\n    var messageDelay = ($messageHeader.data('delay-seconds') * 1000);\n\n    /**\n     * update message template and show/hide with delay\n     * @param  {string} templateData HTML served as a string\n     * @param  {object} viewModel view modal object\n     */\n    function updateMessages(templateData, viewModel) {\n        // remove the existing template data from the container\n        $messageHeader.empty();\n\n        // append new template\n        $($.trim(templateData)).appendTo($messageHeader);\n\n        // bind it to viewModel\n        kendo.bind($messageHeader, viewModel);\n\n        // show and auto hide message after given time\n        $messageHeader.addClass('is-visible');\n        setTimeout(delayAndHideMessage, messageDelay);\n    }\n\n    /**\n     * remove visible class from the message section after defined delay\n     */\n    function delayAndHideMessage() {\n        $messageHeader.removeClass('is-visible');\n    }\n\n    var errorMsgShow = updateMessages;\n    // function (errorTemplate, viewModel) {\n    //     $('.messages-container').empty();\n    //\n    //     $($.trim(errorTemplate))\n    //         .appendTo('.messages-container')\n    //         .each(function () {\n    //             $(this).closest('.messages-container').animate({\n    //                 top: 0\n    //             }, 800);\n    //         });\n    //\n    //     var messageHeader = $('.messages-container');\n    //     kendo.bind(messageHeader, viewModel);\n    // };\n\n    var sucessMsgShow = updateMessages;\n    // function (succTemplate, viewModel) {\n    //     $('.messages-container').empty();\n    //     $($.trim(succTemplate))\n    //         .appendTo('.messages-container')\n    //         .each(function () {\n    //             $(this).closest('.messages-container').animate({\n    //                 top: 0\n    //             }, 800);\n    //         })\n    //         .delay(4000)\n    //         .queue(function () {\n    //             $(this).closest('.messages-container').animate({\n    //                 top: -($('.messages-container').height() + 20)\n    //             }, function () {\n    //                 $('.messages-container').empty();\n    //             });\n    //         });\n    //\n    //     var messageHeader = $('.messages-container');\n    //     kendo.bind(messageHeader, viewModel);\n    // };\n\n    var hideErrorMsgWindow = function (errorTemplate, viewModel) {\n        $messageHeader.empty();\n    };\n\n    var displayPageBusyCursor = function (msg) {\n        $('#pageleveloverlay').show();\n    };\n\n    var hidePageBusyCursor = function (msg) {\n        $('#pageleveloverlay').hide();\n    };\n\n    var displayWorkAreaBusyCursor = function (msg) {\n        $('#workareaoverlay').show();\n    };\n\n    var hideWorkAreaBusyCursor = function (msg) {\n        // To wait before hiding busy cursor.\n        $('#workareaoverlay').hide();\n    };\n\n    var clearValidations = function (viewId) {\n\n        viewId = '#' + viewId;\n        $(viewId).find('.k-invalid-msg').hide();\n        var domElement = $(viewId).find('.k-invalid');\n        domElement.removeClass('k-invalid');\n\n        var domElement1 = $(viewId).find('.k-valid');\n        domElement1.removeClass('k-valid');\n\n    };\n\n    var displayAlertWindow = function (msg) {\n        alert(msg);\n    };\n\n    var displayConfirmWindow = function (msg) {\n        if (confirm(msg)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    var displayWindow = function (template, windowTitle, viewModel) {\n        var WindowElement = $('#commonWindow');\n        WindowElement.html('');\n        WindowElement.append(template.getJQueryElement());\n\n        if (viewModel === undefined) {\n            kendo.bind(WindowElement, kendo.observable({}));\n        } else {\n            kendo.bind(WindowElement, viewModel);\n            if (viewModel.initialize !== undefined) {\n                viewModel.initialize();\n            }\n        }\n\n        WindowElement.show();\n\n        var window = WindowElement.data('kendoWindow');\n\n        if (windowTitle !== undefined) {\r\n            window.title(windowTitle);\r\n        } else {\r\n            window.title(\"\");\n        }\n\n        window.center().open();\n    };\n\n    var toLower = function (data) {\n        return data.toLowerCase();\n    };\n\n    var toUpper = function (data) {\n        return data.toUpperCase();\n    };\n\n    var executeFunctionByName = function (functionName, context, args) {\n        args = Array.prototype.slice.call(arguments).splice(2);\n        var namespaces = functionName.split('.');\n        var func = namespaces.pop();\n        for (var i = 0; i < namespaces.length; i++) {\n            context = context[namespaces[i]];\n        }\n        return context[func].apply(this, args);\n    };\n\n    var getDateFromEpochDate = function (epochDate) {\n        if (parseInt(epochDate))\n            return new Date(epochDate * 1000);\n    };\n\n    var getTodaysDateWithMaxTime = function () {\n        var todayDate = new Date();\n        return new Date(todayDate.getFullYear(), todayDate.getMonth(), todayDate.getDate(), 23, 59, 0, 0);\n    };\n\n    var getCurrentTimeStamp = function () {\n        var todayDate = new Date();\n\n        return todayDate.getMonth() + 1 + '/' + todayDate.getDate() + '/' + todayDate.getFullYear() + ' ' + todayDate.getHours() + ':' + todayDate.getMinutes() + ':' + todayDate.getSeconds();\n    };\n\n    return {\n        toLower: toLower,\n        toUpper: toUpper,\n        executeFunctionByName: executeFunctionByName,\n        getDateFromEpochDate: getDateFromEpochDate,\n        getTodaysDateWithMaxTime: getTodaysDateWithMaxTime,\n        getCurrentTimeStamp: getCurrentTimeStamp,\n\n        displayAlertWindow: displayAlertWindow,\n        displayConfirmWindow: displayConfirmWindow,\n        displayWindow: displayWindow,\n\n        errorMsgShow: errorMsgShow,\n        sucessMsgShow: sucessMsgShow,\n        hideErrorMsgWindow: hideErrorMsgWindow,\n\n        displayPageBusyCursor: displayPageBusyCursor,\n        hidePageBusyCursor: hidePageBusyCursor,\n        displayWorkAreaBusyCursor: displayWorkAreaBusyCursor,\n        hideWorkAreaBusyCursor: hideWorkAreaBusyCursor,\n        clearValidations: clearValidations\n    };\n}();\n","\r\n$ct.security = function () {\r\n\r\n\r\n    var authenticationFailedAction = function () {\r\n\r\n        var event = jQuery.Event($ct.en.getGoToNoPermissionPage());\r\n        $(document).trigger(event);\r\n\r\n    };\r\n\r\n\r\n    var userIdentity = null;\r\n\r\n    var setUserIdentity = function (userIdentityObj) {\r\n        userIdentity = userIdentityObj;\r\n    };\r\n\r\n\r\n    var isValidRole = function () {\r\n\r\n        if (userIdentity == null || userIdentity == undefined) {\r\n            authenticationFailedAction();\r\n        }\r\n\r\n        validRole = false;\r\n        $.each(userIdentity.Roles, function (index, record) {\r\n\r\n            if (\r\n                    (record.Key == $ct.roles.getSuperAdminId()) ||\r\n\r\n                    (record.Key == $ct.roles.getAdministratorId()) ||\r\n\r\n                    (record.Key == $ct.roles.getFacilityUpdateId()) ||\r\n\r\n                    (record.Key == $ct.roles.getFacilityReadOnlyId())\r\n\r\n            ) {\r\n                validRole = true;\r\n            }\r\n\r\n        });\r\n\r\n        return validRole;\r\n\r\n    };\r\n\r\n\r\n    var setRoles = function () {\r\n\r\n        if (userIdentity == null || userIdentity == undefined) {\r\n            authenticationFailedAction();\r\n        }\r\n\r\n        $.each(userIdentity.Roles, function (index, record) {\r\n\r\n            if (record.Key == $ct.roles.getSuperAdminId())\r\n                isSuperAdmin = true;\r\n\r\n            if (record.Key == $ct.roles.getAdministratorId())\r\n                isAdmin = true;\r\n\r\n            if (record.Key == $ct.roles.getFacilityUpdateId())\r\n                isFacilityUpdate = true;\r\n\r\n            if (record.Key == $ct.roles.getFacilityReadOnlyId())\r\n                isFacilityReadOnly = true;\r\n\r\n        });\r\n\r\n\r\n        //Setting highest role\r\n\r\n        if (isSuperAdmin) {\r\n\r\n            isAdmin = false;\r\n            isFacilityUpdate = false;\r\n            isFacilityReadOnly = false;\r\n\r\n        }\r\n\r\n        if (isAdmin) {\r\n\r\n            isFacilityUpdate = false;\r\n            isFacilityReadOnly = false;\r\n\r\n        }\r\n\r\n        if (isFacilityUpdate) {\r\n\r\n            isFacilityReadOnly = false;\r\n        \r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    var isSuperAdmin = false;\r\n\r\n    var isSuperAdminRole = function () {\r\n        return isSuperAdmin\r\n    };\r\n\r\n    var isAdmin = false;\r\n\r\n    var isAdminRole = function () {\r\n        return isAdmin\r\n    };\r\n\r\n    var isFacilityUpdate = false;\r\n\r\n    var isFacilityUpdateRole = function () {\r\n        return isFacilityUpdate\r\n    };\r\n\r\n    var isFacilityReadOnly = false;\r\n\r\n    var isFacilityReadOnlyRole = function () {\r\n        return isFacilityReadOnly\r\n    };\r\n\r\n\r\n\r\n\r\n    var getUserName = function () {\r\n\r\n        if (userIdentity == null || userIdentity == undefined) {\r\n            authenticationFailedAction();\r\n        }\r\n\r\n        return userIdentity.UserFullName;\r\n\r\n    };\r\n\r\n    var isMultiFacilityUser = function () {\r\n\r\n        if (userIdentity == null || userIdentity == undefined) {\r\n            authenticationFailedAction();\r\n        }\r\n\r\n        if (userIdentity.IsMultiFacilityUser) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return {\r\n\r\n        authenticationFailedAction: authenticationFailedAction,\r\n        setUserIdentity: setUserIdentity,\r\n        isValidRole: isValidRole,\r\n        getUserName: getUserName,\r\n        isMultiFacilityUser: isMultiFacilityUser,\r\n\r\n        setRoles: setRoles,\r\n\r\n        //calling setRoles function is prerequisite\r\n        isSuperAdminRole: isSuperAdminRole,\r\n        isAdminRole: isAdminRole,\r\n        isFacilityUpdateRole: isFacilityUpdateRole,\r\n        isFacilityReadOnlyRole: isFacilityReadOnlyRole\r\n        \r\n    };\r\n} ();","\n$(function () {\n    $.ajaxSetup({ cache: false });\n});\n\n$ct.ajax = function () {\n\n    var wrapRequest = function (requestData) {\n\n        var isValidRequest = true;\n\n        //extend is used to use different instance of service request in every ajax call\n        var svcReq = $.extend(true, {}, $ct.constants.getServiceRequest()); ;\n\n        if (svcReq !== undefined) {\n            if (svcReq.ClientTag === undefined || svcReq.ClientTag.length <= 0) {\n                isValidRequest = false;\n            } else {\n                svcReq.RequestId = Math.uuidCompact();\n                svcReq.Data = requestData;\n                svcReq.SessionToken = $ct.constants.getSessionToken();\n            }\n        } else {\n            isValidRequest = false;\n        }\n\n        if (!isValidRequest) {\n            $ct.helpers.displayAlertWindow($ct.msg.getInvalidServiceRequestObject());\n        } else {\n            return svcReq;\n        }\n    };\n\n    //error and success messages in response object needs be handled by client(caller of ajax function) \n    var unwrapResponse = function (response, requestData) {\n        var isValidRequest = true;\n        var errorMsg = $ct.msg.getGenericErrorMsg();\n        var request = $.parseJSON(requestData);\n\n        if (request !== undefined) {\n            if (response !== undefined) {\n                if (response.ResponseId === undefined || response.ResponseId.length <= 0 || response.ResponseId !== request.RequestId) {\n                    isValidRequest = false;\n                    errorMsg = $ct.msg.getInvalidResponseForRequestMsg();\n\n                } else if ($ct.mt.getAcknowledgeTypeSuccess() !== $ct.helpers.toLower(response.AcknowledgeType)) {\n                    var errorObj = $ct.mt.getErrorObject(response);\n                    if (errorObj != null) {\n\n                        var event = jQuery.Event($ct.en.getShowErrorMsgJS());\n                        event.errorObj = errorObj;\n                        $(document).trigger(event);\n                        $ct.helpers.hideWorkAreaBusyCursor();\n                        $ct.helpers.hidePageBusyCursor();\n                    }\n                    if ($ct.mt.isAuthenticationFailed(response)) {\r\n\r\n                        var event = jQuery.Event($ct.en.getGoToNoRolePage());\r\n                        $(document).trigger(event);\r\n\r\n                    }\n                }\n                else {\n\n                    $ct.constants.SessionToken = response.SessionToken;\n\n                }\n            } else {\n\n                isValidRequest = false;\n                errorMsg = $ct.msg.getInvalidResponseMsg();\n\n            }\n        } else {\n            isValidRequest = false;\n        }\n\n        if (!isValidRequest) {\n            $ct.helpers.displayAlertWindow(errorMsg);\n        } else {\n            return response.Data;\n        }\n    };\n\n    var ajaxRequest = function (url, requestData, httpVerb, callBack, errorCallBack, isSaveRequest, attempt, isWrapped) {\n        $.ajax(url, {\n            data: requestData,\n            type: httpVerb,\n            dataType: $ct.constants.getDataType(),\n            contentType: $ct.constants.getContentType(),\n            success: function (data) {\n                if (callBack != undefined) {\n                    var resp = null;\n\n                    var resp = unwrapResponse(data, requestData);\n\n                    if (isWrapped) {\n                        resp = data;\n                    }\n\n                    if (resp !== undefined)\n                    //Success callback\n                        callBack(resp);\n                    else {\n                        if ((errorCallBack !== undefined) && (errorCallBack !== null)) {\n\n                            errorCallBack();\n                        }\n                    }\n                }\n            },\n\n            error: function (xhr, status, err) {\n\n                if ((errorCallBack !== undefined) && (errorCallBack !== null)) {\n                    errorCallBack(xhr, status, err);\n                }\n\n                /*if (!isSaveRequest && attempt <= maxRequestAttempt) {\n                ajaxRequest(url, requestData, httpVerb, callBack, errorCallBack, isSaveRequest, attempt + 1);\n                } else {\n                if (errorCallBack !== undefined)\n                errorCallBack();\n                }*/\n            }\n        });\n    };\n\n    var ajaxGet = function (url, request, callback, errorCallBack) {\n        return ajaxRequest(url, request, $ct.constants.getGetHttpVerb(), callBack, errorCallBack, false, 1);\n    };\n\n    var ajaxPost = function (url, request, callBack, errorCallBack, isWrapped) {\n        var svcReq = wrapRequest(request);\n\n        if (svcReq !== undefined)\n            return ajaxRequest(url, JSON.stringify(svcReq), $ct.constants.getPostHttpVerb(), callBack, errorCallBack, false, 1, isWrapped);\n        //return ajaxRequest(url, kendo.stringify(svcReq), $cm.postHttpVerb, callBack, errorCallBack, false, 1);\n    };\n\n    var ajaxSave = function (url, request, callBack, errorCallBack) {\n        var svcReq = wrapRequest(request);\n\n        if (svcReq !== undefined)\n            return ajaxRequest(url, JSON.stringify(svcReq), $ct.constants.getPostHttpVerb(), callBack, errorCallBack, true, 1);\n        //return ajaxRequest(url, kendo.stringify(svcReq), $cm.postHttpVerb, callBack, errorCallBack, true, 1);\n    };\n\n    // Exposed objects and parameters\n    return {\n\n        ajaxGet: ajaxGet,\n        ajaxPost: ajaxPost,\n        ajaxSave: ajaxSave\n\n    };\n} ();\n","$ct.ds.common = function () {\r\n\r\n\r\n    var getUserIdentityData = function (successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getcommonServicesUrl() + 'GetUserIdentityData', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, function () {\r\n\r\n            $ct.security.authenticationFailedAction();\r\n\r\n        }, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var getAlertsData = function (successCallBack) {\r\n\r\n        var requestParam = \"\";\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterUrl() + 'GetShelterAlerts', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    return {\r\n\r\n        getUserIdentityData: getUserIdentityData,\r\n        getAlertsData: getAlertsData\r\n\r\n    };\r\n\r\n} ();","$ct.ds.admin.agency = function () {\r\n\r\n    var getAgencies = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getAgencyUrl() + 'GetAgencies', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n                       \r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteAgencyById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.AgencyId = ViewModel.selectedId;\r\n        requestParam.AgencyVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getAgencyUrl() + 'DeleteAgency', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getAgencyById = function (agencyId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.AgencyId = agencyId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getAgencyUrl() + 'GetAgencyById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveAgency = function (saveAgencyData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getAgencyUrl() + 'SaveAgency', saveAgencyData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getAgencies: getAgencies,\r\n        deleteAgencyById: deleteAgencyById,\r\n        getAgencyById: getAgencyById,\r\n        saveAgency: saveAgency\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.admin.department = function () {\r\n\r\n\r\n    var getDepartments = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getDepartmentServiceUrl() + 'GetDepartments', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" },\r\n                        HVAC: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //  datasource.fetch();\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteDepartmentById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.DepartmentId = ViewModel.selectedId;\r\n        requestParam.DepartmentVersion = ViewModel.selectedRecordVersion;\r\n        //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getDepartmentServiceUrl() + 'DeleteDepartment', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getDepartmentById = function (departmentId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.departmentId = departmentId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getDepartmentServiceUrl() + 'GetDepartmentById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveDepartment = function (departmentData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getDepartmentServiceUrl() + 'SaveDepartment', departmentData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n\r\n    return {\r\n        getDepartments: getDepartments,\r\n        deleteDepartmentById: deleteDepartmentById,\r\n        getDepartmentById: getDepartmentById,\r\n        saveDepartment: saveDepartment\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.admin.medicalconditiontier = function () {\r\n\r\n    var getMedicalConditionTiers = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getMedicalConditionTierUrl() + 'GetMedicalConditionTiers', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n                       \r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteMedicalConditionTierById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.MedicalConditionTierId = ViewModel.selectedId;\r\n        requestParam.MedicalConditionTierVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getMedicalConditionTierUrl() + 'DeleteMedicalConditionTier', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getMedicalConditionTierById = function (medicalConditionTierId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.MedicalConditionTierId = medicalConditionTierId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getMedicalConditionTierUrl() + 'GetMedicalConditionTierById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveMedicalConditionTier = function (saveMedicalConditionTierData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getMedicalConditionTierUrl() + 'SaveMedicalConditionTier', saveMedicalConditionTierData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getMedicalConditionTiers: getMedicalConditionTiers,\r\n        deleteMedicalConditionTierById: deleteMedicalConditionTierById,\r\n        getMedicalConditionTierById: getMedicalConditionTierById,\r\n        saveMedicalConditionTier: saveMedicalConditionTier\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.admin.sheltertype = function () {\r\n\r\n    var getShelterTypes = function (ViewModel, successCallBack) {\r\n        \r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getShelterTypeUrl() + 'GetShelterTypes', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n                       \r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteShelterTypeById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.ShelterTypeId = ViewModel.selectedId;\r\n        requestParam.ShelterTypeVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterTypeUrl() + 'DeleteShelterType', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getShelterTypeById = function (shelterTypeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.ShelterTypeId = shelterTypeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterTypeUrl() + 'GetShelterTypeById', requestParam, function (result) {\r\n            \r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveShelterType = function (saveShelterTypeData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterTypeUrl() + 'SaveShelterType', saveShelterTypeData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getShelterTypes: getShelterTypes,\r\n        deleteShelterTypeById: deleteShelterTypeById,\r\n        getShelterTypeById: getShelterTypeById,\r\n        saveShelterType: saveShelterType\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.admin.staffspecialty= function () {\r\n\r\n    var getStaffSpecialities = function (ViewModel, successCallBack) {\r\n        \r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getStaffSpecialtyUrl() + 'GetStaffSpecialities', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n                       \r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteStaffSpecialtyById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.StaffSpecialityId = ViewModel.selectedId;\r\n        requestParam.StaffSpecialityVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getStaffSpecialtyUrl() + 'DeleteStaffSpeciality', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getStaffSpecialtyById = function (staffSpecialtyId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.StaffSpecialityId = staffSpecialtyId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getStaffSpecialtyUrl() + 'GetStaffSpecialityById', requestParam, function (result) {\r\n            \r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveStaffSpecialty = function (saveStaffSpecialtyData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getStaffSpecialtyUrl() + 'SaveStaffSpeciality', saveStaffSpecialtyData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getStaffSpecialities: getStaffSpecialities,\r\n        deleteStaffSpecialtyById: deleteStaffSpecialtyById,\r\n        getStaffSpecialtyById: getStaffSpecialtyById,\r\n        saveStaffSpecialty: saveStaffSpecialty\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.admin.transportationType = function () {\r\n\r\n\r\n    var getTransportationTypes = function (ViewModel, successCallBack) {\r\n        \r\n            var datasource = new kendo.data.DataSource({\r\n                transport: {\r\n                    read: function (options) {\r\n                        var filter = null;\r\n                        if (options.data.filter !== undefined) {\r\n                            filter = options.data.filter;\r\n                        }\r\n                        var sort = null;\r\n                        if (options.data.sort !== undefined) {\r\n                            sort = options.data.sort;\r\n                        }\r\n                        var requestParam = {};\r\n                        requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                        ViewModel.set(\"selectedId\", -1);\r\n\r\n                        $ct.ajax.ajaxPost($ct.cn.getTransportationTypeServiceUrl() + 'GetTransportationTypes', requestParam, function (result) {\r\n                            if ($ct.mt.isNoDataFound(result)) {\r\n                                var currPageIndex = datasource.page();\r\n                                if (currPageIndex > 1)\r\n                                    datasource.page(currPageIndex - 1);\r\n                            }\r\n\r\n                            options.success(result);\r\n\r\n                            if (successCallBack != null)\r\n                                successCallBack(result);\r\n                        }, null, true)\r\n                    }\r\n                },\r\n                serverSorting: true,\r\n                serverPaging: true,\r\n                serverFiltering: true,\r\n                pageSize: 10,\r\n                schema: {\r\n                    data: function (response) {\r\n                        return response.Data;\r\n                    },\r\n                    total: function (response) {\r\n\r\n                        if (response != null && response != undefined && response != \"\")\r\n                            return response.TotalRecords;\r\n                    },\r\n                    model: { // define the model of the data source. Required for validation and property types.\r\n                        fields: {\r\n                            DisplayOrder: { type: \"number\" },\r\n                            HVAC: { type: \"boolean\" }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            //  datasource.fetch();\r\n            return datasource;\r\n\r\n\r\n        };\r\n\r\n    var deleteTransportationTypeById = function (ViewModel, successCallBack) {\r\n            var requestParam = {};\r\n\r\n            requestParam.transportationtypeId = ViewModel.selectedId;\r\n            requestParam.transportationtypeVersion = ViewModel.selectedRecordVersion;\r\n            //change url\r\n            $ct.ajax.ajaxPost($ct.cn.getTransportationTypeServiceUrl() + 'DeleteTransportationType', requestParam, function (result) {\r\n\r\n                if (successCallBack != null)\r\n                    successCallBack(result);\r\n\r\n            }, null, true)\r\n\r\n\r\n            return \"\";\r\n\r\n\r\n        };\r\n\r\n    var getTransportationTypeById = function (transportationtypeId, successCallBack) {\r\n\r\n            var requestParam = {};\r\n\r\n            requestParam.transportationtypeId = transportationtypeId;\r\n            //change url\r\n            $ct.ajax.ajaxPost($ct.cn.getTransportationTypeServiceUrl() + 'GetTransportationTypeById', requestParam, function (result) {\r\n\r\n                if (successCallBack != null)\r\n                    successCallBack(result);\r\n\r\n            }, null, true)\r\n\r\n\r\n            return \"\";\r\n        };\r\n\r\n    var saveTransportationType = function (medicalConditionData, successCallBack) {\r\n            //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getTransportationTypeServiceUrl() + 'SaveTransportationType', medicalConditionData, function (result) {\r\n\r\n                if (successCallBack != null)\r\n                    successCallBack(result);\r\n\r\n            }, null, true)\r\n\r\n\r\n            return \"\";\r\n        };\r\n\r\n\r\n\r\n        return {\r\n            getTransportationTypes: getTransportationTypes,\r\n            deleteTransportationTypeById: deleteTransportationTypeById,\r\n            getTransportationTypeById: getTransportationTypeById,\r\n            saveTransportationType: saveTransportationType\r\n        };\r\n\r\n    }();\r\n\r\n\r\n\r\n","$ct.ds.admin.medicalcondition = function () {\r\n   \r\n\r\n    var getMedicalconditions = function (ViewModel, successCallBack) {\r\n        \r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getmedicalConditionServiceUrl() + 'GetMedicalConditions', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" },\r\n                        HVAC: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //  datasource.fetch();\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deletegetMedicalConditionById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.MedicalConditionId = ViewModel.selectedId;\r\n        requestParam.MedicalConditionVersion = ViewModel.selectedRecordVersion;\r\n        //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getmedicalConditionServiceUrl() + 'DeleteMedicalCondition', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getMedicalConditionById = function (MedicalConditionId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.MedicalConditionId = MedicalConditionId;\r\n        //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getmedicalConditionServiceUrl() + 'GetMedicalConditionById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveMedicalCondition = function (medicalConditionData, successCallBack) {\r\n        //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getmedicalConditionServiceUrl() + 'SaveMedicalCondition', medicalConditionData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n\r\n    return {\r\n        getMedicalconditions: getMedicalconditions,\r\n        deletegetMedicalConditionById: deletegetMedicalConditionById,\r\n        getMedicalConditionById: getMedicalConditionById,\r\n        saveMedicalCondition: saveMedicalCondition\r\n    };\r\n\r\n}();\r\n\r\n\r\n","$ct.ds.admin.stafftype = function () {\r\n\r\n\r\n    var getStaffTypes = function (ViewModel, successCallBack) {\r\n       \r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getStaffTypeServiceUrl() + 'GetStaffTypes', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" },\r\n                        HVAC: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //  datasource.fetch();\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deletegetStaffTypesById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.StaffTypeId = ViewModel.selectedId;\r\n        requestParam.StaffTypeVersion = ViewModel.selectedRecordVersion;\r\n        //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getStaffTypeServiceUrl() + 'DeleteStaffType', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getStaffTypesById = function (staffTypeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.StaffTypeId = staffTypeId;\r\n        //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getStaffTypeServiceUrl() + 'GetStaffTypeById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveStaffTypes = function (staffTypeData, successCallBack) {\r\n        //change url\r\n        $ct.ajax.ajaxPost($ct.cn.getStaffTypeServiceUrl() + 'SaveStaffType', staffTypeData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n\r\n    return {\r\n        getStaffTypes: getStaffTypes,\r\n        deletegetStaffTypesById: deletegetStaffTypesById,\r\n        getStaffTypesById: getStaffTypesById,\r\n        saveStaffTypes: saveStaffTypes\r\n    };\r\n\r\n}();\r\n\r\n\r\n","$ct.ds.admin.sheltreeEmployeeRatio = function () {\r\n\r\n    var getSheltreeEmployeeRatio = function (ViewModel, successCallBack) {\r\n        \r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getSheltreeEmployeeRatioUrl() + 'GetSheltreeEmployeeRatios', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        SheltreeCount: { type: \"number\" },\r\n                        EmployeeCount: { type: \"number\" },\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deletesheltreeEmployeeRatioById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.SheltreeEmployeeRatioId = ViewModel.selectedId;\r\n        requestParam.SheltreeEmployeeRatioVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltreeEmployeeRatioUrl() + 'DeleteSheltreeEmployeeRatio', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getsheltreeEmployeeRatioById = function (sheltreeEmployeeRatioId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.SheltreeEmployeeRatioId = sheltreeEmployeeRatioId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltreeEmployeeRatioUrl() + 'GetSheltreeEmployeeRatioById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var savesheltreeEmployeeRatio = function (saveAgencyData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltreeEmployeeRatioUrl() + 'SaveSheltreeEmployeeRatio', saveAgencyData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getSheltreeEmployeeRatio: getSheltreeEmployeeRatio,\r\n        deletesheltreeEmployeeRatioById: deletesheltreeEmployeeRatioById,\r\n        getsheltreeEmployeeRatioById: getsheltreeEmployeeRatioById,\r\n        savesheltreeEmployeeRatio: savesheltreeEmployeeRatio\r\n    };\r\n\r\n}();","$ct.ds.admin.disposition = function () {\r\n\r\n    var getDispositions = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getDispositionUrl() + 'GetDispositions', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteDispositionById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.DispositionId = ViewModel.selectedId;\r\n        requestParam.DispositionVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getDispositionUrl() + 'DeleteDisposition', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getDispositionById = function (dispositionId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.DispositionId = dispositionId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getDispositionUrl() + 'GetDispositionById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveDisposition = function (saveDispositionData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getDispositionUrl() + 'SaveDisposition', saveDispositionData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getDispositions: getDispositions,\r\n        deleteDispositionById: deleteDispositionById,\r\n        getDispositionById: getDispositionById,\r\n        saveDisposition: saveDisposition\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.admin.shelterIdentification = function () {\r\n\r\n    var getShelterIdentifications = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getShelterIdentificationUrl() + 'GetShelterIdentifications', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteShelterIdentificationById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.ShelterIdentificationId = ViewModel.selectedId;\r\n        requestParam.ShelterIdentificationVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterIdentificationUrl() + 'DeleteShelterIdentification', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getShelterIdentificationById = function (shelterIdentificationId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.ShelterIdentificationId = shelterIdentificationId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterIdentificationUrl() + 'GetShelterIdentificationById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveShelterIdentification = function (saveShelterIdentificationData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterIdentificationUrl() + 'SaveShelterIdentification', saveShelterIdentificationData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getShelterIdentifications: getShelterIdentifications,\r\n        deleteShelterIdentificationById: deleteShelterIdentificationById,\r\n        getShelterIdentificationById: getShelterIdentificationById,\r\n        saveShelterIdentification: saveShelterIdentification\r\n    };\r\n\r\n}();\r\n\r\n","\r\n$ct.ds.admin.equipmentsupply = function () {\r\n\r\n    var getEquipmentSupplies = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getEquipmentSupplyUrl() + 'GetEquipmentSupplies', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteEquipmentSupplyById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.EquipmentSupplyId = ViewModel.selectedId;\r\n        requestParam.EquipmentSupplyVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEquipmentSupplyUrl() + 'DeleteEquipmentSupply', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getEquipmentSupplyById = function (equipmentSupplyId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.EquipmentSupplyId = equipmentSupplyId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEquipmentSupplyUrl() + 'GetEquipmentSupplyById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveEquipmentSupply = function (saveEquipmentSupplyData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEquipmentSupplyUrl() + 'SaveEquipmentSupply', saveEquipmentSupplyData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n        getEquipmentSupplies: getEquipmentSupplies,\r\n        deleteEquipmentSupplyById: deleteEquipmentSupplyById,\r\n        getEquipmentSupplyById: getEquipmentSupplyById,\r\n        saveEquipmentSupply: saveEquipmentSupply\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.admin.event = function () {\r\n    var getEvents = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'GetAllEvents', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteEventById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.EventId = ViewModel.selectedId;\r\n        requestParam.EventVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'DeleteEvent', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getEventById = function (eventId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.EventId = eventId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'GetEventById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveEvent = function (saveEventData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'SaveEvent', saveEventData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n   \r\n\r\n    return {\r\n        getEvents: getEvents,\r\n        deleteEventById: deleteEventById,\r\n        getEventById: getEventById,\r\n        saveEvent: saveEvent\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.shlt.shelter = function () {\r\n\r\n\r\n    var getSheltersWithSecurityForActiveEvent = function (successCallBack) {\r\n\r\n        var requestParam = \"\";\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterUrl() + 'GetSheltersWithSecurityForActiveEvent', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var getSheltersWithSecurityForActiveEventWithDs = function (successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n\r\n                    var requestParam = \"\";\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getShelterUrl() + 'GetSheltersWithSecurityForActiveEvent', requestParam, function (result) {\r\n                        \r\n                        var resultData = result.Data;\r\n                        if ((resultData !== undefined && resultData !== null && resultData.length > 0) && ($ct.security.isMultiFacilityUser())) {\r\n\r\n                            //var selectItem = {};\r\n\r\n                            //selectItem.Id = -1;\r\n                            //selectItem.Name = \"All Shelters\";\r\n\r\n                            //resultData.splice(0, 0, selectItem);\r\n\r\n                        }\r\n\r\n                        options.success(resultData);\r\n                        if (successCallBack != null)\r\n                            successCallBack(resultData);\r\n                    }, null, true)\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n    };\r\n\r\n\r\n\r\n    var getSheltersWithSecurityAndCensusForActiveEventWithDs = function (successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n                transport: {\r\n                    read: function (options) {\r\n\r\n                    var requestParam = \"\";\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getShelterUrl() + 'GetSheltersCensusWithSecurityForActiveEvent', requestParam, function (result) {\r\n\r\n                        var resultData = result.Data;\r\n                        if ((resultData !== undefined && resultData !== null && resultData.length > 0) && ($ct.security.isMultiFacilityUser())) {\r\n\r\n                                //var selectItem = {};\r\n\r\n                                    //selectItem.Id = -1;\r\n                            //selectItem.Name = \"All Shelters\";\r\n\r\n                    //resultData.splice(0, 0, selectItem);\r\n\r\n                    }\r\n\r\n            options.success(resultData);\r\n                        if (successCallBack != null)\r\n                            successCallBack(resultData);\r\n                        }, null, true)\r\n                        }\r\n                        }\r\n                        });\r\n\r\n        return datasource;\r\n\r\n            };\r\n\r\n\r\n\r\n    var getShelterStatus = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n\r\n                    var requestParam = {};\r\n\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, Filter: filter, Sort: sort };\r\n                    requestParam.EventId = ViewModel.selectedEventItem.Key;\r\n                    $ct.ajax.ajaxPost($ct.cn.getShelterStatusUrl() + 'GetShelterStatusList', requestParam, function (result) {\r\n\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n\r\n                    //Adding or formatting  open and closed date to data \r\n                    $.each(response.Data, function (index, record) {\r\n\r\n\r\n                        record.onchangeopencloseddate = function () {\r\n\r\n                            var opendate = kendo.parseDate(this.get(\"OpenDate\"), \"yyyy-MM-ddTHH:mm:s\");\r\n\r\n                            var closeddate = kendo.parseDate(this.get(\"ClosedDate\"), \"yyyy-MM-ddTHH:mm:s\");\r\n\r\n                            var currentdate = new Date();\r\n\r\n\r\n\r\n                            if ((opendate == \"\") || (opendate == null) || (opendate > currentdate)) {\r\n\r\n                                this.set(\"Status\", \"Not Assigned\");\r\n\r\n\r\n                            }\r\n\r\n                            else if ((opendate < currentdate) && (closeddate == null)) {\r\n                                this.set(\"Status\", \"Open\");\r\n\r\n                            }\r\n                            else if ((opendate < closeddate) && (closeddate < currentdate)) {\r\n                                this.set(\"Status\", \"Closed\");\r\n\r\n                            }\r\n                            else if (closeddate > currentdate) {\r\n                                this.set(\"Status\", \"Open\");\r\n\r\n                            }\r\n\r\n                            return true;\r\n                        };\r\n\r\n\r\n\r\n\r\n                        if (record.OpenDate === undefined) {\r\n                            record.OpenDate = null;\r\n                        }\r\n                        else {\r\n                            record.OpenDate = kendo.parseDate(record.OpenDate, \"yyyy-MM-ddTHH:mm:s\");\r\n                        }\r\n\r\n                        if (record.ClosedDate === undefined) {\r\n                            record.ClosedDate = null;\r\n                        }\r\n                        else {\r\n                            record.ClosedDate = kendo.parseDate(record.ClosedDate, \"yyyy-MM-ddTHH:mm:s\");\r\n                        }\r\n\r\n\r\n                        record.saveClicked = false;\r\n\r\n\r\n                        record.hideOpenDateValidation = function () {\r\n\r\n\r\n                            if (this.get(\"saveClicked\")) {\r\n                                var openDt = this.get(\"OpenDate\");\r\n\r\n                                if ((openDt == \"\") || (openDt == null)) {\r\n                                    return false;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            else {\r\n                                return true;\r\n                            }\r\n\r\n                        };\r\n\r\n                        record.hideClosedDateValidation = function () {\r\n\r\n                            if (this.get(\"saveClicked\")) {\r\n                                var closedDt = this.get(\"ClosedDate\");\r\n\r\n                                if ((closedDt == \"\") || (closedDt == null)) {\r\n                                    return false;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            else {\r\n                                return true;\r\n                            }\r\n\r\n                        };\r\n\r\n\r\n\r\n                        record.hideOpenClosedDateValidation = function () {\r\n\r\n                            if (this.get(\"saveClicked\")) {\r\n\r\n\r\n                                var openDt = this.get(\"OpenDate\");\r\n\r\n                                if ((openDt == \"\") || (openDt == null)) {\r\n                                    return true;\r\n                                }\r\n\r\n                                var closedDt = this.get(\"ClosedDate\");\r\n\r\n                                if ((closedDt == \"\") || (closedDt == null)) {\r\n                                    return true;\r\n                                }\r\n\r\n                                if (openDt < closedDt) {\r\n                                    return true;\r\n                                }\r\n                                else {\r\n                                    return false;\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n                                return true;\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                    });\r\n\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                }\r\n            }\r\n        });\r\n\r\n        //  datasource.fetch();\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n\r\n    var getEvents = function (successCallBack) {\r\n\r\n        var requestParam = \"\";\r\n        $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'GetEvents', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var saveShelterStatus = function (saveShelterStatusData, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        requestParam.ShelterStatus = {}\r\n        requestParam.ShelterStatus.FacilityId = saveShelterStatusData.ShelterId;\r\n        requestParam.ShelterStatus.OpenDate = saveShelterStatusData.OpenDate;\r\n        requestParam.ShelterStatus.ClosedDate = saveShelterStatusData.ClosedDate;\r\n        requestParam.ShelterStatus.IsNew = saveShelterStatusData.IsNew;\r\n        requestParam.ShelterStatus.Version = saveShelterStatusData.Version;\r\n        requestParam.ShelterStatus.EventId = saveShelterStatusData.EventId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterStatusUrl() + 'SaveShelterStatus', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var exportShelterStatusToExcel = function (ViewModel, successCallBack) {\r\n\r\n\r\n        var filter = null;\r\n        if (ViewModel.dsShelterStatus.filter() !== undefined) {\r\n            filter = ViewModel.dsShelterStatus.filter();\r\n        }\r\n        var sort = null;\r\n        if (ViewModel.dsShelterStatus.sort() !== undefined) {\r\n            sort = ViewModel.dsShelterStatus.sort();\r\n        }\r\n\r\n        var pageIndex = 1;\r\n        if (ViewModel.dsShelterStatus.page() !== undefined) {\r\n            pageIndex = ViewModel.dsShelterStatus.page();\r\n        }\r\n\r\n        var pageSize = 10;\r\n        if (ViewModel.dsShelterStatus.pageSize() !== undefined) {\r\n            pageSize = ViewModel.dsShelterStatus.pageSize();\r\n        }\r\n\r\n\r\n        var requestParam = {};\r\n        requestParam.Criteria = { PageSize: pageSize, PageIndex: pageIndex, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n        requestParam.EventId = ViewModel.selectedEventItem.Key;\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getShelterStatusUrl() + 'ExportShelterStatusToExcel', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n\r\n\r\n    return {\r\n        getSheltersWithSecurityForActiveEvent: getSheltersWithSecurityForActiveEvent,\r\n        getSheltersWithSecurityForActiveEventWithDs: getSheltersWithSecurityForActiveEventWithDs,\r\n        getSheltersWithSecurityAndCensusForActiveEventWithDs: getSheltersWithSecurityAndCensusForActiveEventWithDs,\r\n        getShelterStatus: getShelterStatus,\r\n        getEvents: getEvents,\r\n        saveShelterStatus: saveShelterStatus,\r\n        exportShelterStatusToExcel: exportShelterStatusToExcel\r\n    };\r\n\r\n}();","$ct.ds.emp.employee = function () {\r\n\r\n    var getImportActionOptions = function (successCallBack) {\r\n\r\n        var requestParam = \"\";\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'GetImportActionOptions', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var getExportFailedImportedEmployeeDataToExcel = function (viewModel, successCallBack) {\r\n        var requestParam = { \"FileContentId\": viewModel.FileContentId, \"FacilityId\": viewModel.FacilityId };\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'ExportFailedImportedEmployeeToExcel', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n        }, null, true)\r\n\r\n        return '';\r\n    };\r\n\r\n\r\n\r\n    var getEmployees = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n                    //TODO:\r\n                    requestParam.ShelterId = ViewModel.empHeaderData.shelter.Id;\r\n\r\n                    requestParam.SelectedEmployeeIds = ViewModel.get(\"empRequestData.SelectedEmployeeIds\");\r\n                    requestParam.UnSelectedEmployeeIds = ViewModel.get(\"empRequestData.UnSelectedEmployeeIds\");\r\n                    requestParam.ViewAll = ViewModel.empRequestData.ViewAll;\r\n                    requestParam.FetchSelectedOnly = ViewModel.empRequestData.FetchSelectedOnly;\r\n\r\n                    ViewModel.set(\"selectedId\", \"-1\");\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'GetEmployees', requestParam, function (result) {\r\n\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data.Employees;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        IsMedical: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var getEmployeeExpandedList = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    requestParam.ShelterId = ViewModel.empHeaderData.shelter.Id;\r\n\r\n                    requestParam.SelectedEmployeeIds = ViewModel.get(\"empRequestData.SelectedEmployeeIds\");\r\n                    requestParam.UnSelectedEmployeeIds = ViewModel.get(\"empRequestData.UnSelectedEmployeeIds\");\r\n                    requestParam.ViewAll = ViewModel.empRequestData.ViewAll;\r\n                    requestParam.FetchSelectedOnly = ViewModel.empRequestData.FetchSelectedOnly;\r\n\r\n                    ViewModel.set(\"selectedId\", $ct.constants.getemptyGUID());\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'GetExpandedEmployees', requestParam, function (result) {\r\n\r\n                        if (result.Data.ExpandedEmployees.length === 0) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n                        options.success(result);\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    //ViewModel.set(\"SelectedEmployeeIds\", response.Data.SelectedEmployeeIds);\r\n                    return response.Data.ExpandedEmployees;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        IsMedical: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n    };\r\n\r\n    var getEmployeeBulkUpdateLookup = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.SelectedEmployeeIds = ViewModel.get(\"empRequestData.SelectedEmployeeIds\");\r\n        requestParam.UnSelectedEmployeeIds = ViewModel.get(\"empRequestData.UnSelectedEmployeeIds\");\r\n        requestParam.ViewAll = ViewModel.empRequestData.ViewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.empRequestData.FetchSelectedOnly;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'GetEmployeeBulKUpdateLookupData', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var bulkUpdateEmployeeData = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        var reqObj = ViewModel.saveRequest;\r\n\r\n        requestParam.ShelterId = ViewModel.shelterId;\r\n        // requestParam.SelectedPatientIds = ViewModel.SelectedPatientIds;\r\n\r\n        requestParam.SelectedStaffTypeId = reqObj.valStaffType;\r\n        requestParam.SelectedDepartmentId = reqObj.valDepartment;\r\n        requestParam.SelectedShiftId = reqObj.valShiftTime;\r\n        requestParam.SelectedStaffSpecialityId = reqObj.valStaffSpeciality;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'BulkUpdateEmployeeData', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    var deleteEmployeeById = function (selEmployeeId, selEmployeeVersion, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.Id = selEmployeeId;\r\n        requestParam.EmployeeVersion = selEmployeeVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'DeleteEmployee', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n\r\n\r\n    var getEmployeeById = function (employeeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.EmployeeId = employeeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'GetEmployeeById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var saveEmployee = function (saveEmployeeData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'SaveEmployee', saveEmployeeData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var exportEmployeesListToExcel = function (ViewModel, successCallBack) {\r\n\r\n        var filter = null;\r\n        if (ViewModel.dsEmployeeList.filter() !== undefined) {\r\n            filter = ViewModel.dsEmployeeList.filter();\r\n        }\r\n        var sort = null;\r\n        if (ViewModel.dsEmployeeList.sort() !== undefined) {\r\n            sort = ViewModel.dsEmployeeList.sort();\r\n        }\r\n\r\n        var pageIndex = 1;\r\n        if (ViewModel.dsEmployeeList.page() !== undefined) {\r\n            pageIndex = ViewModel.dsEmployeeList.page();\r\n        }\r\n\r\n        var pageSize = 10;\r\n        if (ViewModel.dsEmployeeList.pageSize() !== undefined) {\r\n            pageSize = ViewModel.dsEmployeeList.pageSize();\r\n        }\r\n\r\n\r\n        var requestParam = {};\r\n        requestParam.Criteria = { PageSize: pageSize, PageIndex: pageIndex, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n        requestParam.ShelterId = ViewModel.empHeaderData.shelter.Id;\r\n\r\n\r\n        //+Note Request Data Added\r\n        requestParam.SelectedEmployeeIds = ViewModel.get(\"empRequestData.SelectedEmployeeIds\");\r\n        requestParam.UnSelectedEmployeeIds = ViewModel.get(\"empRequestData.UnSelectedEmployeeIds\");\r\n        requestParam.ViewAll = ViewModel.empRequestData.ViewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.empRequestData.FetchSelectedOnly;\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'ExportEmployeeToExcel', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n\r\n    var exportEmplyeesExpandedListToExcel = function (ViewModel, successCallBack) {\r\n\r\n\r\n        var filter = null;\r\n        if (ViewModel.dsEmployeeExpandedList.filter() !== undefined) {\r\n            filter = ViewModel.dsEmployeeExpandedList.filter();\r\n        }\r\n        var sort = null;\r\n        if (ViewModel.dsEmployeeExpandedList.sort() !== undefined) {\r\n            sort = ViewModel.dsEmployeeExpandedList.sort();\r\n        }\r\n\r\n        var pageIndex = 1;\r\n        if (ViewModel.dsEmployeeExpandedList.page() !== undefined) {\r\n            pageIndex = ViewModel.dsEmployeeExpandedList.page();\r\n        }\r\n\r\n        var pageSize = 10;\r\n        if (ViewModel.dsEmployeeExpandedList.pageSize() !== undefined) {\r\n            pageSize = ViewModel.dsEmployeeExpandedList.pageSize();\r\n        }\r\n\r\n\r\n        var requestParam = {};\r\n        requestParam.Criteria = { PageSize: pageSize, PageIndex: pageIndex, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n        requestParam.ShelterId = ViewModel.empHeaderData.shelter.Id;\r\n\r\n\r\n        //+Note Request Data Added\r\n        requestParam.SelectedEmployeeIds = ViewModel.get(\"empRequestData.SelectedEmployeeIds\");\r\n        requestParam.UnSelectedEmployeeIds = ViewModel.get(\"empRequestData.UnSelectedEmployeeIds\");\r\n        requestParam.ViewAll = ViewModel.empRequestData.ViewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.empRequestData.FetchSelectedOnly;\r\n\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'ExportExpandedEmployeeToExcel', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n\r\n    //var getActiveEvents = function (selectedShelterId, successCallBack) {\r\n\r\n    //    var requestParam = {};\r\n\r\n    //    requestParam.ShelterId = selectedShelterId;\r\n\r\n    //    $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'GetActiveEvent', requestParam, function (result) {\r\n\r\n    //        if (successCallBack != null)\r\n    //            successCallBack(result);\r\n\r\n    //    }, null, true)\r\n\r\n\r\n    //    return \"\";\r\n    //};\r\n\r\n    var downloadEmployeeToExcel = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.ShelterId = ViewModel.selectedShelterItem.Id;\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'DownloadEmployeeToExcel', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getEmployeeColumnLookup = function (successCallBack) {\r\n\r\n        var requestParam = \"\";\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'GetEmployeeFilterLookupData', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var downloadEmployeeTemplate = function (successCallBack) {\r\n\r\n        var Data = \"\";\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeUrl() + 'DownloadEmployeeTemplate', Data, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n        return \"\";\r\n\r\n    };\r\n\r\n    return {\r\n\r\n        getImportActionOptions: getImportActionOptions,\r\n        getExportFailedImportedEmployeeDataToExcel: getExportFailedImportedEmployeeDataToExcel,\r\n        getEmployeeBulkUpdateLookup  : getEmployeeBulkUpdateLookup ,\r\n        bulkUpdateEmployeeData: bulkUpdateEmployeeData,\r\n        getEmployees: getEmployees,\r\n        getEmployeeExpandedList:getEmployeeExpandedList,\r\n        deleteEmployeeById: deleteEmployeeById,\r\n        getEmployeeById: getEmployeeById,\r\n        saveEmployee: saveEmployee,\r\n        exportEmployeesListToExcel: exportEmployeesListToExcel,\r\n        exportEmplyeesExpandedListToExcel:exportEmplyeesExpandedListToExcel,\r\n        downloadEmployeeToExcel: downloadEmployeeToExcel,\r\n       // getActiveEvents: getActiveEvents,\r\n        getEmployeeColumnLookup: getEmployeeColumnLookup,\r\n        downloadEmployeeTemplate: downloadEmployeeTemplate\r\n\r\n    };\r\n\r\n}();","$ct.ds.emp.empattendance = function () {\r\n\r\n\r\n    //var getEmployeeAttendenceEvent = function (successCallBack) {\r\n    //    var Data = {};\r\n    //    Data.ShelterId = 1;\r\n    //    $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'GetActiveEvent', Data, function (result) {\r\n\r\n    //        if (successCallBack != null)\r\n    //            successCallBack(result);\r\n\r\n    //    }, null, true)\r\n\r\n\r\n    //    return \"\";\r\n\r\n\r\n    //};\r\n    var getEmployeeAttendenceInitialLoad = function (successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeAttendanceUrl() + 'GetEmployeeShiftTime', \"\", function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n    //var getEmployeeAttendenceFacilities = function (successCallBack) {\r\n\r\n    //    $ct.ajax.ajaxPost($ct.cn.getShelterUrl() + 'GetSheltersWithSecurity', \"\", function (result) {\r\n\r\n    //        if (successCallBack != null)\r\n    //            successCallBack(result);\r\n\r\n    //    }, null, true)\r\n\r\n\r\n    //    return \"\";\r\n\r\n\r\n    //};\r\n\r\n    var getEmployeeAttendence = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n\r\n                read: function (options) {\r\n\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: \"\", Filter: filter, Sort: sort };\r\n\r\n\r\n                    //previousAttendenceDatestring\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    requestParam.FacilityId = ViewModel.previousSelectedFacility;\r\n                   \r\n                   \r\n                    requestParam.PrevShiftDate = ViewModel.previousAttendenceDatestring;\r\n                    requestParam.CurrShiftDate = ViewModel.attendenceDatestring;\r\n                    requestParam.ShiftId = ViewModel.previousSelectedShift;\r\n                    requestParam.SelectedEmployeeIds = ViewModel.dcRequestData.selectedEmployeeIds;\r\n                    requestParam.UnSelectedEmployeeIds = ViewModel.dcRequestData.unSelectedEmployeeIds;\r\n                    requestParam.ViewAll = ViewModel.dcRequestData.viewAll;\r\n                    requestParam.FetchSelectedOnly = ViewModel.dcRequestData.fetchSelectedOnly;\r\n\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getEmployeeAttendanceUrl() + 'GetEmployeeAttendance', requestParam, function (result) {\r\n\r\n                        ViewModel.set(\"dcRequestData.viewAll\", false);\r\n                        ViewModel.set(\"dcRequestData.fetchSelectedOnly\", false);\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n\r\n                    $.each(response.Data.EmployeeAttendanceRawData, function (index, record) {\r\n\r\n                        record.hideValidation = true;\r\n                        record.saveClicked = false;\r\n                        record.StatusLookUpData = response.Data.StatusLookUpData;\r\n\r\n\r\n                    });\r\n\r\n                    return response.Data.EmployeeAttendanceRawData;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                       \r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        \r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var saveEmployeeAttendence = function (saveEmployeeAttendenceData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeAttendanceUrl() + 'SaveEmployeeAttendance', saveEmployeeAttendenceData, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var bulkUpdateEmployeeAttendence = function (bulkUpdateEmployeeAttendenceData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeAttendanceUrl() + 'BulkUpdateSelectedEmployeeAttendance', bulkUpdateEmployeeAttendenceData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var exportEmployeeAttendenceToExcel = function (ViewModel, successCallBack) {\r\n\r\n\r\n        var filter = null;\r\n        if (ViewModel.dsEmployeeAttendance.filter() !== undefined) {\r\n            filter = ViewModel.dsEmployeeAttendance.filter();\r\n        }\r\n\r\n        var sort = null;\r\n        if (ViewModel.dsEmployeeAttendance.sort() !== undefined) {\r\n            sort = ViewModel.dsEmployeeAttendance.sort();\r\n        }\r\n\r\n        var pageIndex = 1;\r\n        if (ViewModel.dsEmployeeAttendance.page() !== undefined) {\r\n            pageIndex = ViewModel.dsEmployeeAttendance.page();\r\n        }\r\n\r\n        var pageSize = 10;\r\n        if (ViewModel.dsEmployeeAttendance.pageSize() !== undefined) {\r\n            pageSize = ViewModel.dsEmployeeAttendance.pageSize();\r\n        }\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.Criteria = { PageSize: pageSize, PageIndex: pageIndex, Filter: filter, Sort: sort };\r\n       \r\n       \r\n      \r\n        requestParam.FacilityId = ViewModel.previousSelectedFacility;\r\n        requestParam.PrevShiftDate = ViewModel.previousAttendenceDatestring;\r\n        requestParam.CurrShiftDate = ViewModel.attendenceDatestring;\r\n        requestParam.ShiftId = ViewModel.previousSelectedShift;\r\n        requestParam.SelectedEmployeeIds = ViewModel.get(\"dcRequestData.selectedEmployeeIds\");\r\n        requestParam.UnSelectedEmployeeIds = ViewModel.get(\"dcRequestData.unSelectedEmployeeIds\");\r\n        requestParam.ViewAll = ViewModel.dcRequestData.viewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.dcRequestData.fetchSelectedOnly;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeAttendanceUrl() + 'ExportEmployeeAttendanceToExcel', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var getEmployeeAttendanceCommentHistory = function (commentsViewModel, successCallBack) {\r\n        var Data = {};\r\n        Data.EmployeeId = commentsViewModel.datafromParent.griddata.EmployeeId;\r\n        Data.ShiftDate = commentsViewModel.datafromParent.date;\r\n        Data.ShiftId = commentsViewModel.datafromParent.griddata.ShiftId;\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeAttendanceUrl() + 'GetEmployeeAttendanceComments', Data, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var saveEmployeeAttendenceComment = function (saveEmployeeAttendenceData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEmployeeAttendanceUrl() + 'SaveEmployeeAttendanceComment', saveEmployeeAttendenceData, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n       // getEmployeeAttendenceEvent: getEmployeeAttendenceEvent,\r\n        getEmployeeAttendenceInitialLoad: getEmployeeAttendenceInitialLoad,\r\n        //getEmployeeAttendenceFacilities: getEmployeeAttendenceFacilities,\r\n        getEmployeeAttendence: getEmployeeAttendence,\r\n        saveEmployeeAttendence: saveEmployeeAttendence,\r\n        bulkUpdateEmployeeAttendence: bulkUpdateEmployeeAttendence,\r\n        exportEmployeeAttendenceToExcel: exportEmployeeAttendenceToExcel,\r\n        getEmployeeAttendanceCommentHistory: getEmployeeAttendanceCommentHistory,\r\n        saveEmployeeAttendenceComment: saveEmployeeAttendenceComment\r\n\r\n    };\r\n\r\n\r\n\r\n}();","$ct.ds.sheltree.sheltree = function () {\r\n\r\n    var getShelterees = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n                    //TODO:\r\n\r\n                    requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n                    //requestParam.ShelterId = 1;\r\n\r\n                    requestParam.SelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.SelectedSheltereeIds\");\r\n                    requestParam.UnSelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.UnSelectedSheltereeIds\");\r\n                    requestParam.ViewAll = ViewModel.sheltereeRequestData.ViewAll;\r\n                    requestParam.FetchSelectedOnly = ViewModel.sheltereeRequestData.FetchSelectedOnly;\r\n\r\n\r\n                    ViewModel.set(\"selectedId\", \"-1\");\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetShelterees', requestParam, function (result) {\r\n\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data.SheltereeRawData;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        //IsMedical: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteSheltereeById = function (selSheltereeId, selSheltereeVersion, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.Id = selSheltereeId;\r\n        requestParam.SheltereeVersion = selSheltereeVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'DeleteShelteree', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n    var exportSheltereesListToExcel = function (ViewModel, successCallBack) {\r\n\r\n        var filter = null;\r\n        if (ViewModel.dsSheltereeList.filter() !== undefined) {\r\n            filter = ViewModel.dsSheltereeList.filter();\r\n        }\r\n        var sort = null;\r\n        if (ViewModel.dsSheltereeList.sort() !== undefined) {\r\n            sort = ViewModel.dsSheltereeList.sort();\r\n        }\r\n\r\n        var pageIndex = 1;\r\n        if (ViewModel.dsSheltereeList.page() !== undefined) {\r\n            pageIndex = ViewModel.dsSheltereeList.page();\r\n        }\r\n\r\n        var pageSize = 10;\r\n        if (ViewModel.dsSheltereeList.pageSize() !== undefined) {\r\n            pageSize = ViewModel.dsSheltereeList.pageSize();\r\n        }\r\n\r\n\r\n        var requestParam = {};\r\n        requestParam.Criteria = { PageSize: pageSize, PageIndex: pageIndex, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n        requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n\r\n        requestParam.SelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.SelectedSheltereeIds\");\r\n        requestParam.UnSelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.UnSelectedSheltereeIds\");\r\n        requestParam.ViewAll = ViewModel.sheltereeRequestData.ViewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.sheltereeRequestData.FetchSelectedOnly;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'ExportSheltereeDataToExcel', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n    var getSheltereeBulkUpdateLookup = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.SelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.SelectedSheltereeIds\");\r\n        requestParam.UnSelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.UnSelectedSheltereeIds\");\r\n        requestParam.ViewAll = ViewModel.sheltereeRequestData.ViewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.sheltereeRequestData.FetchSelectedOnly;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeBulKUpdateLookupData', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var bulkUpdateSheltereeData = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        var reqObj = ViewModel.saveRequest;\r\n\r\n        requestParam.ShelterId = ViewModel.shelterId;\r\n        // requestParam.SelectedPatientIds = ViewModel.SelectedPatientIds;\r\n\r\n        requestParam.SelectedTransportationTypeId = reqObj.valTransportationType;\r\n        requestParam.SelectedDispositionId = reqObj.valDisposition;\r\n\r\n        if (reqObj.valDischargeDate == null) {\r\n            requestParam.SelectedDischargeDate = reqObj.valDischargeDate;\r\n        }\r\n        else {\r\n            var DischargeDate = (reqObj.valDischargeDate.getMonth() + 1) + \"/\" + reqObj.valDischargeDate.getDate() + \"/\" + reqObj.valDischargeDate.getFullYear();\r\n            requestParam.SelectedDischargeDate = DischargeDate;\r\n        }\r\n       \r\n        if (reqObj.valArrivalDate == null) {\r\n            \r\n            requestParam.SelectedArrivalDate = reqObj.valArrivalDate;\r\n        }\r\n        else {\r\n\r\n            var ArrivalDate = (reqObj.valArrivalDate.getMonth() + 1) + \"/\" + reqObj.valArrivalDate.getDate() + \"/\" + reqObj.valArrivalDate.getFullYear();\r\n            requestParam.SelectedArrivalDate = ArrivalDate;\r\n        }\r\n\r\n        if (reqObj.valDischargeTime == null) {\r\n            requestParam.SelectedDischargeTime = reqObj.valDischargeTime;\r\n        }\r\n        else {\r\n\r\n            var DischargeTime = (reqObj.valDischargeTime.getHours()) + \":\" + reqObj.valDischargeTime.getMinutes();\r\n            requestParam.SelectedDischargeTime = DischargeTime;\r\n        }\r\n\r\n        if (reqObj.valArrivalTime == null) {\r\n            requestParam.SelectedArrivalTime = reqObj.valArrivalTime;\r\n        }\r\n        else {\r\n\r\n            var ArrivalTime = (reqObj.valArrivalTime.getHours()) + \":\" + reqObj.valArrivalTime.getMinutes();\r\n            requestParam.SelectedArrivalTime = ArrivalTime;\r\n        }\r\n\r\n        requestParam.Destination = reqObj.valDestination;\r\n       \r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'BulkUpdateSheltereeData', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    //var getActiveEvents = function (ViewModel, successCallBack) {\r\n\r\n    //    var requestParam = {};\r\n\r\n\r\n    //    requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n\r\n    //    $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'GetActiveEvent', requestParam, function (result) {\r\n\r\n    //        if (successCallBack != null)\r\n    //            successCallBack(result);\r\n\r\n    //    }, null, true)\r\n\r\n\r\n    //    return \"\";\r\n    //};\r\n\r\n    var getImportActionOptions = function (successCallBack) {\r\n\r\n        var requestParam = \"\";\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeImportActionOptions', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var getExportFailedImportedSheltereeDataToExcel = function (viewModel, successCallBack) {\r\n        var requestParam = { \"FileContentId\": viewModel.FileContentId, \"FacilityId\": viewModel.FacilityId };\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'ExportFailedImportedSheltreeToExcel', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n        }, null, true)\r\n\r\n        return '';\r\n    };\r\n\r\n    var downloadSheltereeToExcel = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.ShelterId = ViewModel.selectedShelterItem.Id;\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'DownloadSheltereeToExcel', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getSheltereeDischargees = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n                    //TODO:\r\n\r\n                    requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n                    //requestParam.ShelterId = 1;\r\n\r\n                    requestParam.SelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.SelectedSheltereeIds\");\r\n                    requestParam.UnSelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.UnSelectedSheltereeIds\");\r\n                    requestParam.ViewAll = ViewModel.sheltereeRequestData.ViewAll;\r\n                    requestParam.FetchSelectedOnly = ViewModel.sheltereeRequestData.FetchSelectedOnly;\r\n\r\n                    ViewModel.set(\"selectedId\", \"-1\");\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeDischargeView', requestParam, function (result) {\r\n\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data.DischargeRawData;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        // IsMedical: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var exportSheltereeDischargeesListToExcel = function (ViewModel, successCallBack) {\r\n\r\n        var filter = null;\r\n        if (ViewModel.dsSheltereeDischargeList.filter() !== undefined) {\r\n            filter = ViewModel.dsSheltereeDischargeList.filter();\r\n        }\r\n        var sort = null;\r\n        if (ViewModel.dsSheltereeDischargeList.sort() !== undefined) {\r\n            sort = ViewModel.dsSheltereeDischargeList.sort();\r\n        }\r\n\r\n        var pageIndex = 1;\r\n        if (ViewModel.dsSheltereeDischargeList.page() !== undefined) {\r\n            pageIndex = ViewModel.dsSheltereeDischargeList.page();\r\n        }\r\n\r\n        var pageSize = 10;\r\n        if (ViewModel.dsSheltereeDischargeList.pageSize() !== undefined) {\r\n            pageSize = ViewModel.dsSheltereeDischargeList.pageSize();\r\n        }\r\n\r\n\r\n        var requestParam = {};\r\n        requestParam.Criteria = { PageSize: pageSize, PageIndex: pageIndex, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n        requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n\r\n        requestParam.SelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.SelectedSheltereeIds\");\r\n        requestParam.UnSelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.UnSelectedSheltereeIds\");\r\n        requestParam.ViewAll = ViewModel.sheltereeRequestData.ViewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.sheltereeRequestData.FetchSelectedOnly;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'ExportSheltereeDischargeDataToExcel', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n\r\n    var getSheltereeMedicalUpdatees = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n                    //TODO:\r\n                    requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n                    //requestParam.ShelterId = 1;\r\n\r\n                    requestParam.SelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.SelectedSheltereeIds\");\r\n                    requestParam.UnSelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.UnSelectedSheltereeIds\");\r\n                    requestParam.ViewAll = ViewModel.sheltereeRequestData.ViewAll;\r\n                    requestParam.FetchSelectedOnly = ViewModel.sheltereeRequestData.FetchSelectedOnly;\r\n\r\n                    ViewModel.set(\"selectedId\", \"-1\");\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeMedicalUpdateView', requestParam, function (result) {\r\n\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data.MedicalUpdateRawData;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        IsMedical: { type: \"boolean\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var exportSheltereeMedicalUpdateesListToExcel = function (ViewModel, successCallBack) {\r\n\r\n        var filter = null;\r\n        if (ViewModel.dsSheltereeMedicalUpdateList.filter() !== undefined) {\r\n            filter = ViewModel.dsSheltereeMedicalUpdateList.filter();\r\n        }\r\n        var sort = null;\r\n        if (ViewModel.dsSheltereeMedicalUpdateList.sort() !== undefined) {\r\n            sort = ViewModel.dsSheltereeMedicalUpdateList.sort();\r\n        }\r\n\r\n        var pageIndex = 1;\r\n        if (ViewModel.dsSheltereeMedicalUpdateList.page() !== undefined) {\r\n            pageIndex = ViewModel.dsSheltereeMedicalUpdateList.page();\r\n        }\r\n\r\n        var pageSize = 10;\r\n        if (ViewModel.dsSheltereeMedicalUpdateList.pageSize() !== undefined) {\r\n            pageSize = ViewModel.dsSheltereeMedicalUpdateList.pageSize();\r\n        }\r\n\r\n\r\n        var requestParam = {};\r\n        requestParam.Criteria = { PageSize: pageSize, PageIndex: pageIndex, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n        requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n\r\n        requestParam.SelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.SelectedSheltereeIds\");\r\n        requestParam.UnSelectedSheltereeIds = ViewModel.get(\"sheltereeRequestData.UnSelectedSheltereeIds\");\r\n        requestParam.ViewAll = ViewModel.sheltereeRequestData.ViewAll;\r\n        requestParam.FetchSelectedOnly = ViewModel.sheltereeRequestData.FetchSelectedOnly;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'ExportSheltereeMedicalUpdateDataToExcel', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n    var generatereportsforDischargeesList = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n       \r\n        requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeDischargeReportData', requestParam, function (result) {\r\n\r\n\r\n                if (successCallBack != null)\r\n                    successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n    var generatereportsforMedicalUpdateesList = function (ViewModel, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.ShelterId = ViewModel.sheltereeHeaderData.shelter.Id;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeMedicalSummaryReportData', requestParam, function (result) {\r\n\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n    var commentMedicalUpdateList = function (MedicalUpdateListId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.Id = MedicalUpdateListId;\r\n\r\n        //getSheltereeFacilityUrl\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeComments', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var commentSaveMedicalUpdateList = function (MedicalUpdateListData, successCallBack) {\r\n\r\n\r\n\r\n        //getSheltereeFacilityUrl\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'SaveSheltereeComment', MedicalUpdateListData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n    var downloadSheltereeTemplate = function (successCallBack) {\r\n\r\n        var Data = \"\";\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'DownloadSheltereeTemplate', Data, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n\r\n    };\r\n\r\n    var generateSheltereeReportClick = function (ReportData, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        requestParam.SheltereeId = ReportData.sheltereeId;\r\n        requestParam.EventId = ReportData.eventId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereePDFReport', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n    \r\n\r\n    return {\r\n\r\n        getShelterees: getShelterees,\r\n        deleteSheltereeById: deleteSheltereeById,\r\n        exportSheltereesListToExcel: exportSheltereesListToExcel,\r\n        getSheltereeBulkUpdateLookup: getSheltereeBulkUpdateLookup,\r\n        bulkUpdateSheltereeData: bulkUpdateSheltereeData,\r\n       // getActiveEvents: getActiveEvents,\r\n        getImportActionOptions: getImportActionOptions,\r\n        getExportFailedImportedSheltereeDataToExcel: getExportFailedImportedSheltereeDataToExcel,\r\n        downloadSheltereeToExcel: downloadSheltereeToExcel,\r\n        getSheltereeDischargees: getSheltereeDischargees,\r\n        exportSheltereeDischargeesListToExcel: exportSheltereeDischargeesListToExcel,\r\n        getSheltereeMedicalUpdatees: getSheltereeMedicalUpdatees,\r\n        exportSheltereeMedicalUpdateesListToExcel: exportSheltereeMedicalUpdateesListToExcel,\r\n        generatereportsforMedicalUpdateesList:generatereportsforMedicalUpdateesList,\r\n        generatereportsforDischargeesList:generatereportsforDischargeesList,\r\n        commentMedicalUpdateList: commentMedicalUpdateList,\r\n        commentSaveMedicalUpdateList: commentSaveMedicalUpdateList,\r\n        downloadSheltereeTemplate: downloadSheltereeTemplate,\r\n        generateSheltereeReportClick: generateSheltereeReportClick\r\n\r\n    };\r\n\r\n}();","$ct.ds.admin.question = function () {\r\n\r\n    var getQuestions = function (ViewModel, successCallBack) {\r\n\r\n        var datasource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    var filter = null;\r\n                    if (options.data.filter !== undefined) {\r\n                        filter = options.data.filter;\r\n                    }\r\n                    var sort = null;\r\n                    if (options.data.sort !== undefined) {\r\n                        sort = options.data.sort;\r\n                    }\r\n                    var requestParam = {};\r\n                    requestParam.Criteria = { PageSize: options.data.pageSize, PageIndex: options.data.page, SearchToken: ViewModel.searchToken, Filter: filter, Sort: sort };\r\n\r\n                    ViewModel.set(\"selectedId\", -1);\r\n\r\n                    $ct.ajax.ajaxPost($ct.cn.getQuestionUrl() + 'GetQuestions', requestParam, function (result) {\r\n                        if ($ct.mt.isNoDataFound(result)) {\r\n                            var currPageIndex = datasource.page();\r\n                            if (currPageIndex > 1)\r\n                                datasource.page(currPageIndex - 1);\r\n                        }\r\n\r\n                        options.success(result);\r\n\r\n                        if (successCallBack != null)\r\n                            successCallBack(result);\r\n                    }, null, true)\r\n                }\r\n            },\r\n            serverSorting: true,\r\n            serverPaging: true,\r\n            serverFiltering: true,\r\n            pageSize: 10,\r\n            schema: {\r\n                data: function (response) {\r\n                    return response.Data;\r\n                },\r\n                total: function (response) {\r\n\r\n                    if (response != null && response != undefined && response != \"\")\r\n                        return response.TotalRecords;\r\n                },\r\n                model: { // define the model of the data source. Required for validation and property types.\r\n                    fields: {\r\n                        DisplayOrder: { type: \"number\" }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return datasource;\r\n\r\n\r\n    };\r\n\r\n    var deleteQuestionById = function (ViewModel, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.QuestionId = ViewModel.selectedId;\r\n        requestParam.QuestionVersion = ViewModel.selectedRecordVersion;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getQuestionUrl() + 'DeleteQuestion', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n    var getQuestionById = function (questionId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        requestParam.QuestionId = questionId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getQuestionUrl() + 'GetQuestionById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveQuestion = function (question, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getQuestionUrl() + 'SaveQuestion', question, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var getQuestionTypeById = function (questiontypeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        requestParam.QuestionTypeId = questiontypeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getmedicalConditionServiceUrl() + 'GetMedicalConditionsByQuestionTypeId', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n\r\n\r\n    var answerTypes = globalAnswerTypes;\r\n\r\n    var getAnswerTypes = function () {\r\n        return answerTypes;\r\n    };\r\n\r\n\r\n    var defaultAnswerType = globalDefaultAnswerType;\r\n\r\n\r\n\r\n    var getDefaultAnswerType = function () {\r\n        return defaultAnswerType;\r\n    };\r\n\r\n\r\n\r\n    //start of question type id's\r\n    var stringTextBoxId = globalQtStringTextBoxId;\r\n    var getStringTextBoxId = function () {\r\n        return stringTextBoxId;\r\n    };\r\n\r\n    var numericTextBoxId = globalQtNumericTextBoxId;\r\n    var getNumericTextBoxId = function () {\r\n        return numericTextBoxId;\r\n    };\r\n\r\n    var decimalTextBoxId = globalQtDecimalTextBoxId;\r\n    var getDecimalTextBoxId = function () {\r\n        return decimalTextBoxId;\r\n    };\r\n\r\n    var textAreaId = globalQtTextAreaId;\r\n    var getTextAreaId = function () {\r\n        return textAreaId;\r\n    };\r\n\r\n    var multipleChoiceOnlyOneAnswerId = globalQtMultipleChoiceOnlyOneAnswerId;\r\n    var getMultipleChoiceOnlyOneAnswerId = function () {\r\n        return multipleChoiceOnlyOneAnswerId;\r\n    };\r\n\r\n    var multipleChoiceMultipleAnswerId = globalQtMultipleChoiceMultipleAnswerId;\r\n    var getMultipleChoiceMultipleAnswerId = function () {\r\n        return multipleChoiceMultipleAnswerId;\r\n    };\r\n\r\n    var dropdownListId = globalQtDropdownListId;\r\n    var getDropdownListId = function () {\r\n        return dropdownListId;\r\n    };\r\n\r\n    return {\r\n        getQuestions: getQuestions,\r\n        deleteQuestionById: deleteQuestionById,\r\n        getAnswerTypes: getAnswerTypes,\r\n        getDefaultAnswerType: getDefaultAnswerType,\r\n        getQuestionById: getQuestionById,\r\n        saveQuestion: saveQuestion,\r\n        getQuestionTypeById: getQuestionTypeById,\r\n\r\n        getStringTextBoxId: getStringTextBoxId,\r\n        getNumericTextBoxId: getNumericTextBoxId,\r\n        getDecimalTextBoxId: getDecimalTextBoxId,\r\n        getTextAreaId: getTextAreaId,\r\n        getMultipleChoiceOnlyOneAnswerId: getMultipleChoiceOnlyOneAnswerId,\r\n        getMultipleChoiceMultipleAnswerId: getMultipleChoiceMultipleAnswerId,\r\n        getDropdownListId: getDropdownListId,\r\n\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.sheltree.sheltreeinput = function () {\r\n\r\n    var getMedicalTabQuestionGroupResponse = function (sheltereeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        requestParam.SheltereeId = sheltereeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getQuestionResponseUrl() + 'GetMedicalTabQuestionGroupResponse', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var getCareRequirements = function (sheltereeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        requestParam.SheltereeId = sheltereeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getQuestionResponseUrl() + 'GetCareRequirementsQuestionGroupResponse', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var getVitals = function (sheltereeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n        requestParam.SheltereeId = sheltereeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getQuestionResponseUrl() + 'GetVitalQuestionGroupResponse', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n\r\n   \r\n    var saveQuestionResponse = function (questionResponse, successCallBack) {\r\n\r\n        //url pending\r\n        $ct.ajax.ajaxPost($ct.cn.getQuestionResponseUrl() + 'SaveQuestionResponse', questionResponse, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n\r\n    var getEquipmentSuppliesById = function (sheltereeId, successCallBack) {\r\n     \r\n        var requestParam = {};\r\n        requestParam.SheltereeId = sheltereeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeEquipmentSupplyById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n            {\r\n                successCallBack(result);\r\n            }\r\n\r\n        }, null, true)\r\n        return \"\";\r\n    };\r\n\r\n    var saveEquipmentSupplies = function (saveEquipmentSuppliesData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'SaveSheltereeEquipmentSupply', saveEquipmentSuppliesData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var getSheltereeIdentificationDischargeAndDispositionById = function (sheltereeId, successCallBack) {\r\n\r\n        var requestParam = {};\r\n\r\n        requestParam.SheltereeId = sheltereeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeIdentificationDispositionDischargeById', requestParam, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var saveSheltereeIdentificationDischargeAndDisposition = function (saveData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'SaveSheltereeIdentificationDispositionDischarge', saveData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var getDemographicsById = function (sheltreeId, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.SheltereeId = sheltreeId;\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeById', requestParam, function (result) {\r\n            if (successCallBack != null)\r\n\r\n                successCallBack(result);\r\n        }, null, true)\r\n        return \"\";\r\n\r\n    };\r\n\r\n    var saveDemographics = function (saveEquipmentSuppliesByIdData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'SaveShelteree', saveEquipmentSuppliesByIdData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var getMedicationById = function (sheltreeId, successCallBack) {\r\n        var requestParam = {};\r\n\r\n        requestParam.SheltereeId = sheltreeId;\r\n        //   requestParam.SheltereeId = $ct.constants.getemptyGUID();\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'GetSheltereeMedications', requestParam, function (result) {\r\n            if (successCallBack != null)\r\n\r\n                successCallBack(result);\r\n        }, null, true)\r\n        return \"\";\r\n    };\r\n\r\n    var saveMedication = function (saveEquipmentSuppliesByIdData, successCallBack) {\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getSheltereeFacilityUrl() + 'SaveSheltereeMedicationWithAllergies', saveEquipmentSuppliesByIdData, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    return {\r\n\r\n        getMedicalTabQuestionGroupResponse: getMedicalTabQuestionGroupResponse,\r\n        getCareRequirements: getCareRequirements,\r\n        getVitals: getVitals,\r\n        saveQuestionResponse: saveQuestionResponse,\r\n        getEquipmentSuppliesById: getEquipmentSuppliesById,\r\n        saveEquipmentSupplies: saveEquipmentSupplies,\r\n        getSheltereeIdentificationDischargeAndDispositionById: getSheltereeIdentificationDischargeAndDispositionById,\r\n        saveSheltereeIdentificationDischargeAndDisposition: saveSheltereeIdentificationDischargeAndDisposition,\r\n        getDemographicsById: getDemographicsById,\r\n        saveDemographics: saveDemographics,\r\n        getMedicationById: getMedicationById,\r\n        saveMedication: saveMedication\r\n\r\n    };\r\n\r\n}();\r\n\r\n","$ct.ds.reports= function () {\r\n\r\n    var getLookupsForStaffRawDataReport = function (successCallBack) {\r\n\r\n        var Data = \"\";\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getReportsUrl() + 'GetLookupsForStaffRawDataReport', Data, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var getLookupsForSheltereeRawDataReport = function (successCallBack) {\r\n\r\n        var Data = \"\";\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getReportsUrl() + 'GetLookupsForSheltereeRawDataReport', Data, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var getLookupsForStaffAttendanceRawDataReport = function (successCallBack) {\r\n\r\n        var Data = \"\";\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getReportsUrl() + 'GetLookupsForStaffAttendanceRawDataReport', Data, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var genarateStaffRawDataReport = function (params, successCallBack) {\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getReportsUrl() + 'GetReportForStaffRawData', params, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n    var genarateStaffAttendanceRawDataReport = function (params, successCallBack) {\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getReportsUrl() + 'GetReportForStaffAttendanceRawData', params, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n\r\n    var genarateSheltereeRawDataReport = function (params, successCallBack) {\r\n\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getReportsUrl() + 'GetReportForSheltereeRawData', params, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n    };\r\n\r\n   \r\n    return {\r\n\r\n        getLookupsForStaffRawDataReport: getLookupsForStaffRawDataReport,\r\n        getLookupsForSheltereeRawDataReport: getLookupsForSheltereeRawDataReport,\r\n        getLookupsForStaffAttendanceRawDataReport: getLookupsForStaffAttendanceRawDataReport,\r\n        genarateStaffRawDataReport: genarateStaffRawDataReport,\r\n        genarateStaffAttendanceRawDataReport: genarateStaffAttendanceRawDataReport,\r\n        genarateSheltereeRawDataReport: genarateSheltereeRawDataReport\r\n    }\r\n}();","$ct.ds.event= function () {\r\n\r\n\r\n    var getActiveEvent = function (successCallBack) {\r\n        var Data = {};\r\n\r\n        $ct.ajax.ajaxPost($ct.cn.getEventUrl() + 'GetActiveEvent', Data, function (result) {\r\n\r\n            if (successCallBack != null)\r\n                successCallBack(result);\r\n\r\n        }, null, true)\r\n\r\n\r\n        return \"\";\r\n\r\n\r\n    };\r\n\r\n   \r\n    return {\r\n\r\n\r\n        getActiveEvent: getActiveEvent\r\n    }\r\n\r\n}();","/**\r\n* root HTML element\r\n* @type {object}\r\n*/\r\nvar rootEle = document.documentElement;\r\n\r\n$(document).ready(function (e) {\r\n    var $appHeader  = $('#hd');\r\n    var $appContent = $('#bd');\r\n\r\n    // alerts\r\n    $appContent.on('click', '.app-alerts', alertsToggle);\r\n\r\n    // navigation view toggle\r\n    $appHeader.on({\r\n        'mouseenter': showNavPanel,\r\n        'mouseleave': hideNavPanel\r\n    },'.main-menu');\r\n\r\n    // hide nav when close button clicked\r\n    $appHeader.on('click', '.app-logo__menu-collapse', toggleNavPanel);\r\n\r\n    // expand/collapse navigation\r\n    $appHeader.on('click', '.app-nav__main__li.has-subnav', toggleMainNavActive);\r\n\r\n    // active class for selected subnav\r\n    $appHeader.on('click', '.app-nav__sub__li', toggleSubNavActive);\r\n});\r\n\r\n\r\n/**\r\n * Toggle alerts view on the page\r\n * @param  {object} e event\r\n */\r\nfunction alertsToggle(e){\r\n    var alertsEle = e.currentTarget;\r\n    $(alertsEle).toggleClass('is-alerts-visible');\r\n}\r\n\r\n/**\r\n * show navigation panel\r\n */\r\nfunction showNavPanel(e) {\r\n    var focusedElement = document.activeElement;\r\n    $(rootEle).addClass('has-nav-expanded');\r\n\r\n    // if focused element not found, exit from here, because no further execution is needed.\r\n    if(!focusedElement){\r\n        return;\r\n    }\r\n\r\n    // hack to avoid cursor overlap in IE\r\n    if (focusedElement.nodeName === 'TEXTAREA' || focusedElement.nodeName === 'INPUT') {\r\n        focusedElement.blur();\r\n    }\r\n}\r\n\r\n/**\r\n * hide navigation panel\r\n */\r\nfunction hideNavPanel() {\r\n    $(rootEle).removeClass('has-nav-expanded');\r\n}\r\n\r\n/**\r\n * Toggle navigation section\r\n */\r\nfunction toggleNavPanel() {\r\n    $(rootEle).toggleClass('has-nav-expanded');\r\n}\r\n\r\n/**\r\n * Main nav active state toggle\r\n * @param  {Object} event\r\n */\r\nfunction toggleMainNavActive(event) {\r\n    var $ele               = $(event.currentTarget);\r\n    var mainNavActiveClass = 'is-mainnav-active';\r\n    var isActive           = $ele.hasClass(mainNavActiveClass);\r\n\r\n    // if the main menu already has active class remove\r\n    if (isActive) {\r\n        resetMainSubNavState(mainNavActiveClass);\r\n    } else {\r\n        resetMainSubNavState(mainNavActiveClass);\r\n\r\n        // add active class to current element\r\n        $ele.addClass(mainNavActiveClass);\r\n    }\r\n}\r\n\r\n/**\r\n * remove active class from main nav and subnav\r\n * @param {string} mainNavActiveClass\r\n */\r\nfunction resetMainSubNavState(mainNavActiveClass) {\r\n    var subNavActiveClass  = 'is-subnav-active';\r\n    var $mainNav           = $('.app-nav__main__li');\r\n    var $subNav            = $('.app-nav__sub__li');\r\n\r\n    $mainNav.removeClass(mainNavActiveClass);\r\n    $subNav.removeClass(subNavActiveClass);\r\n}\r\n\r\n/**\r\n * Subnav active state update based on clicked element\r\n * @param  {Object} event\r\n */\r\nfunction toggleSubNavActive(event) {\r\n    var $ele               = $(event.currentTarget);\r\n    var subNavActiveClass  = 'is-subnav-active';\r\n    var $subNavSiblings    = $ele.siblings('.'+subNavActiveClass);\r\n\r\n    event.stopPropagation();\r\n\r\n    // remove active class from siblings\r\n    $subNavSiblings.removeClass(subNavActiveClass);\r\n\r\n    // add active class to current element\r\n    $ele.addClass(subNavActiveClass);\r\n}\r\n"],"sourceRoot":"/source/"}